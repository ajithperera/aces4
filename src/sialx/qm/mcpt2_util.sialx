import "mcpt2_defs.sialx" 
import "mcpt2_vars.sialx"
#
SIAL mcpt2_util
# 
# -----------------------------------------------------------------------------
# 
      PROC SET_FRAG_PARMS    
#     ------------------- 
#
#     Determine the number of fragments  
#     --------------------------------- 
      execute set_frag n_frags

      do kfrag
      do jfrag
	  where jfrag <= kfrag
	  icount = (scalar)kfrag
	  jcount = (scalar)jfrag

          execute return_pairs icount jcount elst_thresh pair_flag 
	  elst_dist[kfrag,jfrag] = 0.0
	  elst_dist[jfrag,kfrag] = 0.0

          if pair_flag > zero
	  elst_dist[kfrag,jfrag] = (scalar)kfrag
	  elst_dist[jfrag,kfrag] = (scalar)jfrag
	  endif

          execute return_pairs icount jcount r_thresh pair_flag 
	  rcut_dist[kfrag,jfrag] = 0.0
	  rcut_dist[jfrag,kfrag] = 0.0

          if pair_flag > zero
	  rcut_dist[kfrag,jfrag] = (scalar)kfrag
	  rcut_dist[jfrag,kfrag] = (scalar)jfrag
	  endif

      enddo jfrag
      enddo kfrag

      do jfrag
#
	  icount = (scalar)jfrag
          i_aostart = icount
          i_aoend   = 1.0
          execute frag_index_range i_aostart i_aoend
          i_vstart  = icount
          i_vend    = 6.0
          execute frag_index_range i_vstart i_vend

          m  = icount
          n    = 7.0
          execute frag_index_range m n

          a_vstart  = m + (scalar)bavirt - 1.0
          a_vend    = n + (scalar)bavirt - 1.0

          do mu
          where mu >= (int)i_aostart
          where mu <= (int)i_aoend
              SwAO_frag[(index)mu] = (scalar)jfrag
          enddo mu

          DO i
          where i >= (int)i_vstart
          where i <= (int)i_vend
               SwOccA_frag[(index)i] = (scalar)jfrag
          ENDDO i
          DO a
          where a >= (int)a_vstart 
          where a <= (int)a_vend 
               SwVirtA_frag[(index)a] = (scalar)jfrag
          ENDDO a
      enddo jfrag
      print SwVirtA_frag

      sip_barrier
      ENDPROC SET_FRAG_PARMS    
#
ENDSIAL mcpt2_util
################################################################################
