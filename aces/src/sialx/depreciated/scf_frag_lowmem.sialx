import "mcpt2_defs.sialx" 
import "mcpt2_vars.sialx"
import "mcpt2_util.sialx"
#
SIAL SCF_FRAGMENT 
#
      PROC IGUESS   
#     ----------- 
#
#     Get memory requirements from integral calculation 
#     ------------------------------------------------- 
      print "Starting scratch memory calculation" 
      imax = 0.0  
      zmax = 0.0  
      execute compute_int_scratchmem_lowmem zmax imax 
      sip_barrier 
      print "Done computing scratch memory" 
#
      sip_barrier 
      allocate contiguous scr_1[1:max_aoseg,1:max_aoseg]
      allocate contiguous scr_2[1:max_aoseg,1:max_aoseg]
      allocate contiguous scr_3[1:max_aoseg,1:max_aoseg]
      allocate contiguous scr_4[1:max_aoseg,1:max_aoseg]
      allocate contiguous scr_5[1:max_aoseg,1:max_aoseg]
      sip_barrier 

    PARDO katom  
    where katom > 1
	icount = (scalar)katom

#	print icount # etemp 

#	print "Starting computing fragment scf" 
	execute scf_atom_lowmem icount scr_1[1:max_aoseg,1:max_aoseg] scr_2[1:max_aoseg,1:max_aoseg] scr_3[1:max_aoseg,1:max_aoseg] scr_4[1:max_aoseg,1:max_aoseg]
#	print "Done computing fragment scf" 
#
# Nowput the coefficients and fock matrices into the full distributed arrays 

	stype = 1.0 # HF coefficients  
	DO mu
	where (int)SwAO_frag[(index)mu] == katom
	    DO a
	    where (int)SwVirtA_frag[(index)a] == katom
		txp[mu,a]      = 0.0  
		execute place_scratch txp[mu,a]  scr_1[1:max_aoseg,1:max_aoseg] stype icount 
		PUT DCa[mu,a] += txp[mu,a]
	    ENDDO a
	    DO i
	    where (int)SwOccA_frag[(index)i] == katom
		txp[mu,i]      = 0.0  
		execute place_scratch txp[mu,i]  scr_1[1:max_aoseg,1:max_aoseg] stype icount  
		PUT DCa[mu,i] += txp[mu,i]
	    ENDDO i
	ENDDO mu
#	print "Done placing coefficients"

	stype = 2.0 # Fock matrix  
	DO a   
	where (int)SwVirtA_frag[(index)a] == katom
	    DO a1
	    where (int)SwVirtA_frag[(index)a1] == katom
		tpp[a,a1]          = 0.0  
		execute place_scratch tpp[a,a1]  scr_3[1:max_aoseg,1:max_aoseg] stype icount 
		PUT Dfock_a[a,a1] += tpp[a,a1] 
	    ENDDO a1
	    DO i1
	    where (int)SwOccA_frag[(index)i1] == katom
		tpp[a,i1]          = 0.0  
		execute place_scratch tpp[a,i1]  scr_3[1:max_aoseg,1:max_aoseg] stype icount 
		PUT Dfock_a[a,i1] += tpp[a,i1] 
	    ENDDO i1
	ENDDO a   

	DO i   
	where (int)SwOccA_frag[(index)i] == katom
	    DO i1
	    where (int)SwOccA_frag[(index)i1] == katom
		tpp[i,i1]          = 0.0  
		execute place_scratch tpp[i,i1]  scr_3[1:max_aoseg,1:max_aoseg] stype icount 
		PUT Dfock_a[i,i1] += tpp[i,i1]
	    ENDDO i1
	    DO a1
	    where (int)SwVirtA_frag[(index)a1] == katom
		tpp[i,a1]          = 0.0  
		execute place_scratch tpp[i,a1]  scr_3[1:max_aoseg,1:max_aoseg] stype icount 
		PUT Dfock_a[i,a1] += tpp[i,a1]
	    ENDDO a1
	ENDDO i

#                 DO p 
#                 DO p1 
#                    tpp(p,p1) = 0.0 
#                    execute place_scratch tpp(p,p1)  scratch3 stype  
#                    PUT Dfock_a(p,p1) += tpp(p,p1)
#                 ENDDO p1 
#                 ENDDO p 
#	print "Done placing fock_matrix"


    ENDPARDO katom   
      sip_barrier 
      deallocate contiguous scr_1[1:max_aoseg,1:max_aoseg]
      deallocate contiguous scr_2[1:max_aoseg,1:max_aoseg]
      deallocate contiguous scr_3[1:max_aoseg,1:max_aoseg]
      deallocate contiguous scr_4[1:max_aoseg,1:max_aoseg]
      deallocate contiguous scr_5[1:max_aoseg,1:max_aoseg]
      sip_barrier 
#
      ENDPROC IGUESS   

# -----------------------------------------------------------------------------
# 
#     START OF MAIN PROGRAM  
#
# -----------------------------------------------------------------------------

      CALL SET_FRAG_PARMS   
      sip_barrier 
      print "Done setting fragment parameters" 

      restore_persistent MOI_ca "MOI_ca"
      restore_persistent MOI_focka "MOI_focka"
      server_barrier
# place MOI scf coeffs.
      pardo fmu, fa
          get MOI_ca[fmu,fa]
	  put Dca[fmu,fa] = MOI_ca[fmu,fa]
      endpardo fmu, fa
      pardo fmu, fi
          get MOI_ca[fmu,fi]
	  put Dca[fmu,fi] = MOI_ca[fmu,fi]
      endpardo fmu, fi
# place MOI fock matrix
      pardo fa,fa1
          get MOI_focka[fa,fa1]
	  put DFock_a[fa,fa1] = MOI_focka[fa,fa1]
      endpardo fa,fa1
      pardo fa,fi1
          get MOI_focka[fa,fi1]
	  put DFock_a[fa,fi1] = MOI_focka[fa,fi1]
      endpardo fa,fi1
      pardo fi,fa1
          get MOI_focka[fi,fa1]
	  put DFock_a[fi,fa1] = MOI_focka[fi,fa1]
      endpardo fi,fa1
      pardo fi,fi1
          get MOI_focka[fi,fi1]
	  put DFock_a[fi,fi1] = MOI_focka[fi,fi1]
      endpardo fi,fi1
      server_barrier
      print "Done placing MOI"

      print "Performing monomer SCF"
      call IGUESS
      sip_barrier 

      set_persistent Dca "ca" 
      set_persistent DFock_a "fock_a"
      print "Done setting persistent arrays"

# -----------------------------------------------------------------------------
#
ENDSIAL SCF_FRAGMENT 
#
###############################################################################
