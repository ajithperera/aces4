import "ccsd_uhf_defs.sialx"
import "ccsd_uhf_vars.sialx"
import "diis_4index_ccsd_uhf.sialx"

#  Copyright (c) 2003-2010 University of Florida
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  The GNU General Public License is included in this distribution
#  in the file COPYRIGHT.
                           SIAL CCSD_UHF 
#                          --------------                          
#
     PROC READ_2EL   
#    -------------
#
     restore_persistent ca     "ca"
     restore_persistent cb     "cb"
     restore_persistent Fock_a "fock_a"
     restore_persistent Fock_b "fock_b"
     restore_persistent VSpipi "VSpipi"
     restore_persistent Vaaii "Vaaii"
     restore_persistent Viaai "Viaai"
     restore_persistent Vaaai "Vaaai"
     restore_persistent VSaaai "VSaaai"
     restore_persistent VSbbbj "VSbbbj"
     restore_persistent VSqjqj "VSqjqj"
     restore_persistent Vbbjj "Vbbjj"
     restore_persistent Vjbbj "Vjbbj"
     restore_persistent Vbbii "Vbbii"
     restore_persistent Vjbii "Vjbii"
     restore_persistent Vbbai "Vbbai"
     restore_persistent Vpiqj "Vpiqj"
     restore_persistent Vaajj "Vaajj"
     restore_persistent Viabj "Viabj"
     restore_persistent Vaabj "Vaabj"
     server_barrier
#
     ENDPROC READ_2EL   
#    ----------------
#
     PROC WRITE_2EL   
#    --------------
#
     set_persistent ca     "ca"
     set_persistent cb     "cb"
     set_persistent Fock_a "fock_a"
     set_persistent Fock_b "fock_b"
     set_persistent VSpipi "VSpipi"
     set_persistent Vaaii "Vaaii"
     set_persistent Viaai "Viaai"
     set_persistent Vaaai "Vaaai"
     set_persistent VSaaai "VSaaai"
     set_persistent VSbbbj "VSbbbj"
     set_persistent VSqjqj "VSqjqj"
     set_persistent Vbbjj "Vbbjj"
     set_persistent Vjbbj "Vjbbj"
     set_persistent Vbbii "Vbbii"
     set_persistent Vjbii "Vjbii"
     set_persistent Vbbai "Vbbai"
     set_persistent Vpiqj "Vpiqj"
     set_persistent Vaajj "Vaajj"
     set_persistent Viabj "Viabj"
     set_persistent Vaabj "Vaabj"
     set_persistent t1a_old  "t1a_old"
     set_persistent t1b_old  "t1b_old"
     set_persistent T2old_aa "T2old_aa"
     set_persistent T2old_ab "T2old_ab"
     set_persistent T2old_bb "T2old_bb"
     set_persistent scf_energy "scf_energy"
     set_persistent ccsd_energy "ccsd_energy"
     server_barrier 
#
     ENDPROC WRITE_2EL   
#    -----------------
# 
     PROC IGUESS_UHF  
#    --------------
#
     PARDO a, a1, i, i1 
#
           REQUEST VSpipi[a,i,a1,i1]
#
           Taiai[a,i,a1,i1]            = VSpipi[a,i,a1,i1]
           execute energy_denominator  Taiai[a,i,a1,i1] fock_a fock_a AAAA
           PREPARE T2old_aa[a,i,a1,i1] = Taiai[a,i,a1,i1]  
           PREPARE D0aiai[a,i,a1,i1] = Taiai[a,i,a1,i1]  
#
     ENDPARDO a, a1, i, i1  
#
     PARDO b, b1, j, j1 
#
           REQUEST VSqjqj[b,j,b1,j1]  
#
           Tbjbj[b,j,b1,j1]            = VSqjqj[b,j,b1,j1]  
           execute energy_denominator    Tbjbj[b,j,b1,j1] fock_b fock_b BBBB
           PREPARE T2old_bb[b,j,b1,j1] = Tbjbj[b,j,b1,j1]  
           PREPARE D0bjbj[b,j,b1,j1] = Tbjbj[b,j,b1,j1]  
#
     ENDPARDO b, b1, j, j1 
#
     PARDO a, b, i, j 
#
           REQUEST Vpiqj[a,i,b,j]  
#
           Taibj[a,i,b,j]            = Vpiqj[a,i,b,j]
           execute energy_denominator  Taibj[a,i,b,j] fock_a fock_b ABAB
           PREPARE T2old_ab[a,i,b,j] = Taibj[a,i,b,j]
           PREPARE D0aibj[a,i,b,j] = Taibj[a,i,b,j]  
#
     ENDPARDO a, b, i, j 
#
     PARDO a, i
#
           tai[a,i] = 0.0
           PUT t1a_old[a,i] = tai[a,i]
           PREPARE D0ai[a,i] = tai[a,i]
#
     ENDPARDO a, i
#
     PARDO b, j
#
           tbj[b,j] = 0.0
           PUT t1b_old[b,j] = tbj[b,j]
           PREPARE D0bj[b,j] = tbj[b,j]
#
     ENDPARDO b, j
# 
     ENDPROC IGUESS_UHF 
#    -----------------
#
      PROC TAUAA 
#     ----------
#
      PARDO a, i, a1, i1 
#
            REQUEST T2old_aa[a,i,a1,i1] 
            GET t1a_old[a1,i1] 
            GET t1a_old[a1,i] 
            GET t1a_old[a,i1] 
            GET t1a_old[a,i] 
# 
            tai[a1,i1]                 = t1a_old[a1,i1] 
            tmp1_aiai[a,i,a1,i1]       = t1a_old[a,i]^tai[a1,i1]  
            tai[a1,i]                  = t1a_old[a1,i] 
            tmp2_aiai[a,i,a1,i1]       = t1a_old[a,i1]^tai[a1,i]  
            tmp1_aiai[a,i,a1,i1]      -= tmp2_aiai[a,i,a1,i1]  
#
            tmp3_aiai[a,i,a1,i1]       = tmp1_aiai[a,i,a1,i1] 
            tmp3_aiai[a,i,a1,i1]      += T2old_aa[a,i,a1,i1] 
            PREPARE Tau_aa[a,i,a1,i1]  = tmp3_aiai[a,i,a1,i1]  
#
            tmp1_aiai[a,i,a1,i1]      *= 0.5  
            tmp1_aiai[a,i,a1,i1]      += T2old_aa[a,i,a1,i1] 
            PREPARE Taup_aa[a,i,a1,i1] = tmp1_aiai[a,i,a1,i1]  
#
      ENDPARDO a, i, a1, i1 
#
      ENDPROC TAUAA 
#     ------------- 
# 
      PROC TAUBB 
#     ----------
#
      PARDO b, j, b1, j1 
#
            REQUEST T2old_bb[b,j,b1,j1] 
            GET t1b_old[b1,j1] 
            GET t1b_old[b1,j] 
            GET t1b_old[b,j1] 
            GET t1b_old[b,j] 
#
            tbj[b1,j1]                 = t1b_old[b1,j1] 
            tmp1_bjbj[b,j,b1,j1]       = t1b_old[b,j]^tbj[b1,j1]  
            tbj[b1,j]                  = t1b_old[b1,j] 
            tmp2_bjbj[b,j,b1,j1]       = t1b_old[b,j1]^tbj[b1,j]  
            tmp1_bjbj[b,j,b1,j1]      -= tmp2_bjbj[b,j,b1,j1] 
#
            tmp3_bjbj[b,j,b1,j1]       = tmp1_bjbj[b,j,b1,j1] 
            tmp3_bjbj[b,j,b1,j1]      += T2old_bb[b,j,b1,j1] 
            PREPARE Tau_bb[b,j,b1,j1]  = tmp3_bjbj[b,j,b1,j1]  
#
            tmp1_bjbj[b,j,b1,j1]      *= 0.5  
            tmp1_bjbj[b,j,b1,j1]      += T2old_bb[b,j,b1,j1] 
            PREPARE Taup_bb[b,j,b1,j1] = tmp1_bjbj[b,j,b1,j1]  
#
      ENDPARDO b, j, b1, j1 
#
      ENDPROC TAUBB 
#     ------------- 
#
      PROC TAUAB 
#     ----------
#
      PARDO a, i, b, j 
#
            REQUEST T2old_ab[a,i,b,j]
            GET t1a_old[a,i] 
            GET t1b_old[b,j] 
#
            tmp1_aibj[a,i,b,j]       = t1a_old[a,i]^t1b_old[b,j]  
            tmp2_aibj[a,i,b,j]       = tmp1_aibj[a,i,b,j]  
            tmp2_aibj[a,i,b,j]      *= 0.5  
#
            tmp1_aibj[a,i,b,j]      += T2old_ab[a,i,b,j] 
            tmp2_aibj[a,i,b,j]      += T2old_ab[a,i,b,j] 
            PREPARE Tau_ab[a,i,b,j]  = tmp1_aibj[a,i,b,j]  
            PREPARE Taup_ab[a,i,b,j] = tmp2_aibj[a,i,b,j]  
#
      ENDPARDO a, i, b, j 
#
      ENDPROC TAUAB 
#     ------------- 

      PROC TAUPAA 
#     -----------
#
      PARDO a, i, a1, i1 
#
            REQUEST T2old_aa[a,i,a1,i1] 
            GET t1a_old[a1,i1] 
            GET t1a_old[a1,i] 
            GET t1a_old[a,i1] 
            GET t1a_old[a,i] 
#
            tai[a1,i1]                 = t1a_old[a1,i1] 
            tmp1_aiai[a,i,a1,i1]       = t1a_old[a,i]^tai[a1,i1]  
            tai[a1,i]                  = t1a_old[a1,i] 
            tmp2_aiai[a,i,a1,i1]       = t1a_old[a,i1]^tai[a1,i]  
            tmp1_aiai[a,i,a1,i1]      -= tmp2_aiai[a,i,a1,i1] 
            tmp1_aiai[a,i,a1,i1]      *= 0.5  
            tmp1_aiai[a,i,a1,i1]      += T2old_aa[a,i,a1,i1] 
            PREPARE Taup_aa[a,i,a1,i1] = tmp1_aiai[a,i,a1,i1]  
#
      ENDPARDO a, i, a1, i1 
#
      ENDPROC TAUPAA 
#     --------------
#
      PROC TAUPBB 
#     -----------
#
      PARDO b, j, b1, j1 
#
            REQUEST T2old_bb[b,j,b1,j1] 
            GET t1b_old[b1,j1] 
            GET t1b_old[b1,j] 
            GET t1b_old[b,j1] 
            GET t1b_old[b,j] 
#
            tbj[b1,j1]                 = t1b_old[b1,j1] 
            tmp1_bjbj[b,j,b1,j1]       = t1b_old[b,j]^tbj[b1,j1]  
            tbj[b1,j]                  = t1b_old[b1,j] 
            tmp2_bjbj[b,j,b1,j1]       = t1b_old[b,j1]^tbj[b1,j]  
            tmp1_bjbj[b,j,b1,j1]      -= tmp2_bjbj[b,j,b1,j1] 
            tmp1_bjbj[b,j,b1,j1]      *= 0.5  
            tmp1_bjbj[b,j,b1,j1]      += T2old_bb[b,j,b1,j1] 
            PREPARE Taup_bb[b,j,b1,j1] = tmp1_bjbj[b,j,b1,j1]  
#
      ENDPARDO b, j, b1, j1 
#
      ENDPROC TAUPBB 
#     --------------
#
      PROC TAUPAB 
#     -----------
#
      PARDO a, i, b, j 
#
            REQUEST T2old_ab[a,i,b,j] 
            GET t1a_old[a,i] 
            GET t1b_old[b,j] 
# 
            tmp1_aibj[a,i,b,j]       = t1a_old[a,i]^t1b_old[b,j]  
            tmp1_aibj[a,i,b,j]      *= 0.5  
            tmp1_aibj[a,i,b,j]      += T2old_ab[a,i,b,j] 
            PREPARE Taup_ab[a,i,b,j] = tmp1_aibj[a,i,b,j]  
#
      ENDPARDO a, i, b, j 
#
      ENDPROC TAUPAB 
#
#
      PROC TAU 
#     --------
#
           CALL TAUAA 
           CALL TAUBB 
           CALL TAUAB 
#
      ENDPROC TAU 
#     -----------
      PROC TAUP
#     ---------
#
           CALL TAUPAA 
           CALL TAUPBB 
           CALL TAUPAB 
#
      ENDPROC TAUP
#     ------------
#
      PROC FAEA
#     ----------
#
      PARDO a, a2, i
#
               allocate LWaiai[a2,i,a,*]
#
               DO a1
#
                  REQUEST            VSaaai[a1,a,a2,i]
                  GET                t1a_old[a2,i]
#
                  Taa[a,a1]        = VSaaai[a1,a,a2,i]*t1a_old[a2,i]
                  PUT Fae_a[a,a1] += Taa[a,a1]
#
                  DO i1
#
                     GET                  t1a_old[a1,i1]
                     taiai[a2,i,a,i1]   = VSaaai[a1,a,a2,i]*t1a_old[a1,i1]
                     LWaiai[a2,i,a,i1] += taiai[a2,i,a,i1]
#
                  ENDDO i1
#
               ENDDO a1
#
               DO i1
#
                  Taiai[a2,i,a,i1] = LWaiai[a2,i,a,i1]
                  PREPARE e5aiai[a2,i,a,i1] = Taiai[a2,i,a,i1]
#
               ENDDO i1
#
               deallocate LWaiai[a2,i,a,*]
#
      ENDPARDO a, a2, i
#
      PARDO a, b, j
#
            allocate LWaibj[a,*,b,j]
#
            DO a1
#
               REQUEST            Vaabj[a1,a,b,j]
               GET                t1b_old[b,j]
#
               DO i
#
                  GET                t1a_old[a1,i]
                  taibj[a,i,b,j]   = Vaabj[a1,a,b,j]*t1a_old[a1,i]
                  LWaibj[a,i,b,j] += taibj[a,i,b,j]
#
               ENDDO i
#
               Taa[a,a1]        = Vaabj[a1,a,b,j]*t1b_old[b,j]
               PUT Fae_a[a,a1] += Taa[a,a1]
#
            ENDDO a1
#
            DO i
#
               Taibj[a,i,b,j] = LWaibj[a,i,b,j]
               PREPARE e6aibj[a,i,b,j] = Taibj[a,i,b,j]
#
            ENDDO i
#
            deallocate LWaibj[a,*,b,j]
#
      ENDPARDO a, b, j
#
      PARDO a1, i, b, j
#
           REQUEST Vpiqj[a1,i,b,j]
#
           DO a
#
              REQUEST Taup_ab[a,i,b,j] 
#
              Taa[a,a1]        = Taup_ab[a,i,b,j]*Vpiqj[a1,i,b,j]
              Taa[a,a1]       *= -1.0
#
              PUT Fae_a[a,a1] += Taa[a,a1]
#
           ENDDO a
#
      ENDPARDO a1, i, b, j
#
      PARDO a1, i, a2, i1
#
           REQUEST              VSpipi[a1,i1,a2,i]
#
           DO a
#
               REQUEST Taup_aa[a,i,a2,i1] 
#
               Taa[a,a1]        = Taup_aa[a,i,a2,i1]*VSpipi[a1,i1,a2,i]
               Taa[a,a1]       *= 0.5
#
               PUT Fae_a[a,a1] += Taa[a,a1]
#
            ENDDO a
#
      ENDPARDO a1, i, a2, i1
#
      ENDPROC FAEA
#     -------------
#
#    ------------------------------------------------------------------------ 
#
#    ------------------------------------------------------------------------ 
#
      PROC FAEB
#     ----------
#
      PARDO b, b2, j
#
               allocate LWbjbj[b2,j,b,*] 
#
               DO b1 
#
                  REQUEST            VSbbbj[b1,b,b2,j] 
                  GET                t1b_old[b2,j] 
#
                  DO j1 
#
                     GET                  t1b_old[b1,j1] 
                     tbjbj[b2,j,b,j1]   = VSbbbj[b1,b,b2,j]*t1b_old[b1,j1] 
                     LWbjbj[b2,j,b,j1] += tbjbj[b2,j,b,j1] 
#
                  ENDDO j1 
#
                  T1bb[b,b1]        = VSbbbj[b1,b,b2,j]*t1b_old[b2,j]  
                  PUT Fae_b[b,b1] += T1bb[b,b1] 
#
               ENDDO b1 
#
               DO j1 
#
                  Tbjbj[b2,j,b,j1] = LWbjbj[b2,j,b,j1]
                  PREPARE e5bjbj[b2,j,b,j1] = Tbjbj[b2,j,b,j1] 
#
               ENDDO j1 
#
               deallocate LWbjbj[b2,j,b,*] 
#
      ENDPARDO b, b2, j
#
      PARDO a, i, b   
#
            allocate LWaibj[a,i,b,*] 
#
            DO b1  
#
               REQUEST            Vbbai[b1,b,a,i] 
               GET                t1a_old[a,i] 
#
               DO j 
#
                  GET                t1b_old[b1,j] 
                  taibj[a,i,b,j]   = Vbbai[b1,b,a,i]*t1b_old[b1,j] 
                  LWaibj[a,i,b,j] += taibj[a,i,b,j] 
#
               ENDDO j 
#
               T1bb[b,b1]        = Vbbai[b1,b,a,i]*t1a_old[a,i] 
               PUT Fae_b[b,b1] += T1bb[b,b1] 
#
            ENDDO b1  
#
            DO j 
#
               Taibj[a,i,b,j] = LWaibj[a,i,b,j]
               PREPARE e5aibj[a,i,b,j] = Taibj[a,i,b,j] 
#
            ENDDO j 
#
            deallocate LWaibj[a,i,b,*] 
#
      ENDPARDO a, i, b   
#
      PARDO b1, j, a, i  
#
          REQUEST Vpiqj[a,i,b1,j]   
#
          DO b  
#
             REQUEST Taup_ab[a,i,b,j] 
#
             T1bb[b,b1]        = Taup_ab[a,i,b,j]*Vpiqj[a,i,b1,j] 
             T1bb[b,b1]       *= -1.0  
#
             PUT Fae_b[b,b1] += T1bb[b,b1] 
#
          ENDDO b  
#
      ENDPARDO b1, j, a, i  
#
      PARDO b1, j, b2, j1  
#
          REQUEST              VSqjqj[b1,j1,b2,j] 
#
          DO b  
#
             REQUEST Taup_bb[b,j,b2,j1]   
#
             T1bb[b,b1]        = Taup_bb[b,j,b2,j1]*VSqjqj[b1,j1,b2,j] 
             T1bb[b,b1]       *= 0.5 
#
             PUT Fae_b[b,b1] += T1bb[b,b1] 
#
          ENDDO b 
#
      ENDPARDO b1, j, b2, j1  
#
      ENDPROC FAEB
#     -------------
#
      PROC FAE
#     --------
         CALL FAEA 
         CALL FAEB 
      ENDPROC FAE
#     ----------- 
#
      PROC FMEA
#     ----------
#
      PARDO i, a 
#
            Tme_a[i,a] = 0.0
# 
            DO i1 
            DO a1 
#
               REQUEST VSpipi[a,i,a1,i1] 
               GET     t1a_old[a1,i1] 
#
               Tia[i,a]    = VSpipi[a,i,a1,i1]*t1a_old[a1,i1] 
               Tme_a[i,a] += Tia[i,a] 
#
            ENDDO a1 
            ENDDO i1 
# 
            DO j 
            DO b 
#
               REQUEST Vpiqj[a,i,b,j] 
               GET     t1b_old[b,j] 
#
               Tia[i,a]    = Vpiqj[a,i,b,j]*t1b_old[b,j] 
               Tme_a[i,a] += Tia[i,a] 
#
            ENDDO b 
            ENDDO j 
#
            PUT Fme_a[i,a] = Tme_a[i,a] 
#
      ENDPARDO i, a 
# 
      ENDPROC FMEA
#     -------------
#
      PROC FMEB
#     ----------
#
      PARDO j, b 
#
            Tme_b[j,b] = 0.0
# 
            DO j1 
            DO b1 
#
               REQUEST VSqjqj[b,j,b1,j1] 
               GET     t1b_old[b1,j1] 
#
               Tjb[j,b]    = VSqjqj[b,j,b1,j1]*t1b_old[b1,j1] 
               Tme_b[j,b] += Tjb[j,b] 
#
            ENDDO b1 
            ENDDO j1 
# 
            DO i 
            DO a 
#
               REQUEST Vpiqj[a,i,b,j] 
               GET     t1a_old[a,i] 
#
               Tjb[j,b]    = Vpiqj[a,i,b,j]*t1a_old[a,i] 
               Tme_b[j,b] += Tjb[j,b] 
#
            ENDDO a 
            ENDDO i 
#
            PUT Fme_b[j,b] = Tme_b[j,b] 
#
      ENDPARDO j, b 
# 
      ENDPROC FMEB
#     -------------
#
      PROC FME
#     ----------
         CALL FMEA
         CALL FMEB
      ENDPROC FME
#     ------------
#
      PROC FMIA
#     ----------
#
      PARDO i1, i, a, i2
#
            REQUEST VSpipi[a,i2,i,i1] 
            GET t1a_old[a,i2] 
#
            Tii[i1,i]        = VSpipi[a,i2,i,i1]*t1a_old[a,i2] 
            PUT Fmi_a[i1,i] += Tii[i1,i] 
#
      ENDPARDO i1, i, a, i2  
#
      PARDO a, a2, i2  
#
            allocate L3aiai[a2,*,a,i2] 
#
            DO i1 
#
               REQUEST VSpipi[a2,i1,a,i2] 
               L3aiai[a2,i1,a,i2] = VSpipi[a2,i1,a,i2] 
#
            ENDDO i1 
#
            DO i   
#
               REQUEST Taup_aa[a2,i,a,i2] 
# 
               DO i1    
#
                  Tii[i1,i]        = L3aiai[a2,i1,a,i2]*Taup_aa[a2,i,a,i2] 
                  Tii[i1,i]       *= 0.5 
                  PUT Fmi_a[i1,i] += Tii[i1,i] 
#
               ENDDO i1  
#
            ENDDO i   
#
            deallocate L3aiai[a2,*,a,i2] 
#
      ENDPARDO a, a2, i2  
#
      PARDO i1, i, b, j  
#
            REQUEST Vpiqj[i,i1,b,j]   
            GET t1b_old[b,j] 
#
            Tii[i1,i]        = Vpiqj[i,i1,b,j]*t1b_old[b,j] 
            PUT Fmi_a[i1,i] += Tii[i1,i] 
#
      ENDPARDO i1, i, b, j  
#
      PARDO i1, i, b, j  
#
            DO a 
#
               REQUEST Vpiqj[a,i1,b,j]  
               REQUEST Taup_ab[a,i,b,j] 
 
               Tii[i1,i]        = Taup_ab[a,i,b,j]*Vpiqj[a,i1,b,j] 
               PUT Fmi_a[i1,i] += Tii[i1,i] 
#
            ENDDO a 
#
      ENDPARDO i1, i, b, j  
#
      ENDPROC FMIA
#     -------------
#
      PROC FMIB
#     ----------
#
      PARDO j1, j, b, j2
#
            REQUEST VSqjqj[b,j2,j,j1] 
            GET t1b_old[b,j2] 
#
            Tjj[j1,j]        = VSqjqj[b,j2,j,j1]*t1b_old[b,j2] 
            PUT Fmi_b[j1,j] += Tjj[j1,j] 
#
      ENDPARDO j1, j, b, j2  
#
      PARDO b, b2, j2  
#
            allocate L3bjbj[b2,*,b,j2] 
#
            DO j1 
#
               REQUEST VSqjqj[b2,j1,b,j2] 
               L3bjbj[b2,j1,b,j2] = VSqjqj[b2,j1,b,j2] 
#
            ENDDO j1 
#
            DO j   
#
               REQUEST Taup_bb[b2,j,b,j2] 
# 
               DO j1    
#
                  Tjj[j1,j]        = L3bjbj[b2,j1,b,j2]*Taup_bb[b2,j,b,j2] 
                  Tjj[j1,j]       *= 0.5 
                  PUT Fmi_b[j1,j] += Tjj[j1,j] 
#
               ENDDO j1  
#
            ENDDO j   
#
            deallocate L3bjbj[b2,*,b,j2] 
#
      ENDPARDO b, b2, j2  
#
      PARDO j1, j, a, i  
#
            REQUEST Vpiqj[a,i,j,j1] 
            GET t1a_old[a,i] 
#
            Tjj[j1,j]        = Vpiqj[a,i,j,j1]*t1a_old[a,i] 
            PUT Fmi_b[j1,j] += Tjj[j1,j] 
#
      ENDPARDO j1, j, a, i  
#
      PARDO j1, j, a, i  
#
            DO b 
#
               REQUEST Vpiqj[a,i,b,j1]  
               REQUEST Taup_ab[a,i,b,j] 
               Tjj[j1,j]        = Taup_ab[a,i,b,j]*Vpiqj[a,i,b,j1] 
               PUT Fmi_b[j1,j] += Tjj[j1,j] 
#
            ENDDO b 
#
      ENDPARDO j1, j, a, i  
#
      ENDPROC FMIB
#     -------------
#
      PROC FMI 
#     ----------

         CALL FMIA 
         CALL FMIB 

      ENDPROC FMI 
#     ----------- 
#
# In the procedure T1ANEW all contributions to the singles amplitude t1a 
# are computed. 
#
      PROC T1ANEW 
#     -----------
#
      PARDO a, i 
#
            tai[a,i] = 0.0 
#
            DO i1 
#
               GET t1a_old[a,i1] 
               GET Fmi_a[i1,i] 
#
               t1ai[a,i] = t1a_old[a,i1]*Fmi_a[i1,i]
               tai[a,i] -= t1ai[a,i] 
#
            ENDDO i1  
#
            DO b 
            DO j 
#
               REQUEST T2old_ab[a,i,b,j] 
               REQUEST Viabj[i,a,b,j] 
               GET Fme_b[j,b] 
               GET t1b_old[b,j] 
#
               t1ai[a,i] = T2old_ab[a,i,b,j]*Fme_b[j,b] 
               tai[a,i] += t1ai[a,i] 
#
               t2ai[a,i]  = Viabj[i,a,b,j]*t1b_old[b,j] 
               tai[a,i] += t2ai[a,i] 
#
            ENDDO j 
            ENDDO b 
# 
            DO a1 
#
               GET t1a_old[a1,i] 
               GET Fae_a[a,a1] 
#
               t1ai[a,i] = t1a_old[a1,i]*Fae_a[a,a1] 
               tai[a,i] += t1ai[a,i] 
#
               DO i1 
#
                  REQUEST T2old_aa[a,i,a1,i1] 
                  REQUEST Vaaii[a,a1,i1,i]   
                  REQUEST Viaai[i1,a1,a,i]   
                  GET Fme_a[i1,a1] 
                  GET t1a_old[a1,i1] 
#
                  t1ai[a,i] = T2old_aa[a,i,a1,i1]*Fme_a[i1,a1]
                  tai[a,i] += t1ai[a,i] 
#
                  Tpppp[i1,a1,a,i]  = Vaaii[a,a1,i1,i]  
                  Tpppp[i1,a1,a,i] -= Viaai[i1,a1,a,i]  
#
                  t2ai[a,i] = Tpppp[i1,a1,a,i]*t1a_old[a1,i1] 
                  tai[a,i] -= t2ai[a,i] 
#
               ENDDO i1 
#
            ENDDO a1 
#
            PUT t1a_new[a,i] += tai[a,i] 
#
      ENDPARDO a, i 
#
      PARDO a1, a2, i1   
#
            allocate L4aiai[a1,*,a2,i1] 
#
            DO i 
#
               REQUEST T2old_aa[a1,i,a2,i1] 
               L4aiai[a1,i,a2,i1] = T2old_aa[a1,i,a2,i1] 
#
            ENDDO i  
#
            DO a 
#
               REQUEST VSaaai[a2,a,a1,i1]  
# 
               DO i 
#
                  tai[a,i]  = VSaaai[a2,a,a1,i1]*L4aiai[a1,i,a2,i1] 
                  tai[a,i] *= -0.5 
#
                  PUT t1a_new[a,i] += tai[a,i] 
#
               ENDDO i 
#
            ENDDO a 
#
            deallocate L4aiai[a1,*,a2,i1] 
#
      ENDPARDO a1, a2, i1  
#
      PARDO a1, i1, i2  
#
            allocate L1aiii[a1,i2,*,i1] 
#
            DO i 
#
               REQUEST VSpipi[a1,i2,i,i1] 
               L1aiii[a1,i2,i,i1] = VSpipi[a1,i2,i,i1] 
#
            ENDDO i 
#
            DO a 
#
               REQUEST T2old_aa[a,i1,a1,i2] 
# 
               DO i 
#
                  tai[a,i]  = L1aiii[a1,i2,i,i1]*T2old_aa[a,i1,a1,i2] 
                  tai[a,i] *= -0.5 
#
                  PUT t1a_new[a,i] += tai[a,i] 
#
               ENDDO i 
#
            ENDDO a 
#
            deallocate L1aiii[a1,i2,*,i1] 
#
      ENDPARDO a1, i1, i2  
#
      PARDO a1, b, j  
#
            allocate L1aibj[a1,*,b,j] 
#
            DO i 
#
               REQUEST T2old_ab[a1,i,b,j] 
               L1aibj[a1,i,b,j] = T2old_ab[a1,i,b,j] 
#
            ENDDO i 
#
            DO a 
#
               REQUEST Vaabj[a1,a,b,j] 
#
               DO i  
#
                  tai[a,i]  = Vaabj[a1,a,b,j]*L1aibj[a1,i,b,j] 
#
                  PUT t1a_new[a,i] += tai[a,i] 
#
               ENDDO i 
#
            ENDDO a 
#
            deallocate L1aibj[a1,*,b,j] 
#
      ENDPARDO a1, b, j  
#
      PARDO b, j, i1  
#
            allocate L1iibj[*,i1,b,j] 
#
            DO i 
#
               REQUEST Vpiqj[i,i1,b,j] 
               L1iibj[i,i1,b,j] = Vpiqj[i,i1,b,j] 
#
            ENDDO i 
#
            DO a 
#
               REQUEST T2old_ab[a,i1,b,j]
#
               DO i 
#
                  tai[a,i]  = L1iibj[i,i1,b,j]*T2old_ab[a,i1,b,j] 
                  tai[a,i] *= -1.0 
#
                  PUT t1a_new[a,i] += tai[a,i] 
#
               ENDDO i 
#
            ENDDO a 
#
            deallocate L1iibj[*,i1,b,j] 
#
      ENDPARDO b, j, i1  
#
      ENDPROC T1ANEW 
#     --------------
#
# In the procedure T1BNEW all contributions to the singles amplitude t1a 
# are computed. 
#
      PROC T1BNEW 
#     -----------
#
      PARDO b, j 
#
            tbj[b,j] = 0.0 
#
            DO j1 
#
               GET t1b_old[b,j1] 
               GET Fmi_b[j1,j] 
#
               t1bj[b,j] = t1b_old[b,j1]*Fmi_b[j1,j]
               tbj[b,j] -= t1bj[b,j] 
#
            ENDDO j1  
#
            DO a 
            DO i 
#
               REQUEST T2old_ab[a,i,b,j] 
               REQUEST Viabj[i,a,b,j]   
               GET Fme_a[i,a] 
               GET t1a_old[a,i] 
#
               t1bj[b,j] = T2old_ab[a,i,b,j]*Fme_a[i,a] 
               tbj[b,j] += t1bj[b,j] 
#
               t2bj[b,j]  = Viabj[i,a,b,j]*t1a_old[a,i] 
               tbj[b,j] += t2bj[b,j] 
#
            ENDDO i 
            ENDDO a 
# 
            DO b1 
#
               GET t1b_old[b1,j] 
               GET Fae_b[b,b1] 
#
               t1bj[b,j] = t1b_old[b1,j]*Fae_b[b,b1] 
               tbj[b,j] += t1bj[b,j] 
#
               DO j1 
#
                  REQUEST T2old_bb[b,j,b1,j1] 
                  REQUEST Vbbjj[b,b1,j1,j]   
                  REQUEST Vjbbj[j1,b1,b,j]   
                  GET Fme_b[j1,b1] 
                  GET t1b_old[b1,j1] 
#
                  t1bj[b,j] = T2old_bb[b,j,b1,j1]*Fme_b[j1,b1]
                  tbj[b,j] += t1bj[b,j] 
#
                  Tqqqq[j1,b1,b,j]  = Vbbjj[b,b1,j1,j]  
                  Tqqqq[j1,b1,b,j] -= Vjbbj[j1,b1,b,j]  
#
                  t2bj[b,j] = Tqqqq[j1,b1,b,j]*t1b_old[b1,j1] 
                  tbj[b,j] -= t2bj[b,j] 
#
               ENDDO j1 
#
            ENDDO b1 
#
            PUT t1b_new[b,j] += tbj[b,j] 
#
      ENDPARDO b, j 
#
      PARDO b1, b2, j1   
#
            allocate L4bjbj[b1,*,b2,j1] 
#
            DO j 
#
               REQUEST T2old_bb[b1,j,b2,j1] 
               L4bjbj[b1,j,b2,j1] = T2old_bb[b1,j,b2,j1] 
#
            ENDDO j  
#
            DO b 
#
               REQUEST VSbbbj[b2,b,b1,j1]
# 
               DO j 
#
                  tbj[b,j]  = VSbbbj[b2,b,b1,j1]*L4bjbj[b1,j,b2,j1] 
                  tbj[b,j] *= -0.5 
#
                  PUT t1b_new[b,j] += tbj[b,j] 
#
               ENDDO j 
#
            ENDDO b 
#
            deallocate L4bjbj[b1,*,b2,j1] 
#
      ENDPARDO b1, b2, j1  
#
      PARDO b1, j1, j2  
#
            allocate L1bjjj[b1,j2,*,j1] 
#
            DO j 
#
               REQUEST VSqjqj[b1,j2,j,j1] 
               L1bjjj[b1,j2,j,j1] = VSqjqj[b1,j2,j,j1] 
#
            ENDDO j 
#
            DO b 
#
               REQUEST T2old_bb[b,j1,b1,j2] 
# 
               DO j 
#
                  tbj[b,j]  = L1bjjj[b1,j2,j,j1]*T2old_bb[b,j1,b1,j2] 
                  tbj[b,j] *= -0.5 
#
                  PUT t1b_new[b,j] += tbj[b,j] 
#
               ENDDO j 
#
            ENDDO b 
#
            deallocate L1bjjj[b1,j2,*,j1] 
#
      ENDPARDO b1, j1, j2  
#
      PARDO b1, a, i  
#
            allocate L4aibj[a,i,b1,*] 
#
            DO j 
#
               REQUEST T2old_ab[a,i,b1,j] 
               L4aibj[a,i,b1,j] = T2old_ab[a,i,b1,j] 
#
            ENDDO j 
#
            DO b 
#
               REQUEST Vbbai[b1,b,a,i]  
#
               DO j  
#
                  tbj[b,j]  = Vbbai[b1,b,a,i]*L4aibj[a,i,b1,j]  
#
                  PUT t1b_new[b,j] += tbj[b,j] 
#
               ENDDO j 
#
            ENDDO b 
#
            deallocate L4aibj[a,i,b1,*] 
#
      ENDPARDO b1, a, i  
#
      PARDO a, i, j1  
#
            allocate Ljjai[a,i,*,j1] 
#
            DO j 
#
               REQUEST Vpiqj[a,i,j,j1] 
               Ljjai[a,i,j,j1] = Vpiqj[a,i,j,j1] 
#
            ENDDO j 
#
            DO b 
#
               REQUEST T2old_ab[a,i,b,j1] 
#
               DO j 
#
                  tbj[b,j]  = Ljjai[a,i,j,j1]*T2old_ab[a,i,b,j1]  
                  tbj[b,j] *= -1.0 
#
                  PUT t1b_new[b,j] += tbj[b,j] 
#
               ENDDO j 
#
            ENDDO b 
#
            deallocate Ljjai[a,i,*,j1]  
#
      ENDPARDO a, i, j1  
#
      ENDPROC T1BNEW 
#     --------------
#
      PROC WminjAA
#     ------------
#
#      PARDO i, i1, i2, i3
#            PUT Wminj_aa[i2,i,i3,i1] = 0.0
#      ENDPARDO i, i1, i2, i3
#      sip_barrier 
      
      PARDO i, i1, i2, i3
#
            REQUEST VSpipi[i2,i,i3,i1] 
            Tiiii[i2,i,i3,i1] = VSpipi[i2,i,i3,i1]
            PUT Wminj_aa[i2,i,i3,i1] = Tiiii[i2,i,i3,i1]
      ENDPARDO i, i1, i2, i3
#
      PARDO a, i3, i, i2
            REQUEST VSpipi[a,i3,i,i2] 
            GET t1a_old[a,i]

            DO i1
               REQUEST VSpipi[a,i3,i1,i2] 
               GET t1a_old[a,i1]
#
               Tiiii[i2,i,i3,i1]  = VSpipi[a,i3,i,i2]*t1a_old[a,i1]
               T1iiii[i2,i,i3,i1] = VSpipi[a,i3,i1,i2]*t1a_old[a,i]
               Tiiii[i2,i,i3,i1] -= T1iiii[i2,i,i3,i1]
#
               PUT Wminj_aa[i2,i,i3,i1] += Tiiii[i2,i,i3,i1]
            ENDDO i1
#
      ENDPARDO a, i3, i, i2
#
      PARDO i, i1, a, a1
           REQUEST Tau_aa[a,i,a1,i1]  
#
           DO i2
           DO i3
               REQUEST VSpipi[a,i2,a1,i3]
#
               Tiiii[i2,i,i3,i1] = VSpipi[a,i2,a1,i3]*Tau_aa[a,i,a1,i1]
               Tiiii[i2,i,i3,i1]*= 0.25
               PUT Wminj_aa[i2,i,i3,i1] += Tiiii[i2,i,i3,i1]
            ENDDO i3
            ENDDO i2
#
      ENDPARDO i, i1, a, a1
#
      sip_barrier
#
      PARDO i, i1, a, a1
#
            Taiai[a,i,a1,i1] = 0.0
#
            DO i2
            DO i3
#
               REQUEST Tau_aa[a,i2,a1,i3] 
               GET Wminj_aa[i2,i,i3,i1]
#
               T1aiai[a,i,a1,i1] = Tau_aa[a,i2,a1,i3]*Wminj_aa[i2,i,i3,i1]
               Taiai[a,i,a1,i1] += T1aiai[a,i,a1,i1]
#
            ENDDO i3
            ENDDO i2
#
            Taiai[a,i,a1,i1]            *= 0.5
            PREPARE T2new_aa[a,i,a1,i1] += Taiai[a,i,a1,i1]
#
      ENDPARDO i, i1, a, a1
      sip_barrier
#
      ENDPROC WminjAA
#     --------------- 
#
      PROC WminjBB
#     ------------
#
#      PARDO j, j1, j2, j3
#            PUT Wminj_bb[j2,j,j3,j1] = 0.0
#      ENDPARDO j, j1, j2, j3
#      sip_barrier 

      PARDO j, j1, j2, j3
#
            REQUEST VSqjqj[j2,j,j3,j1] 
            Tjjjj[j2,j,j3,j1] = VSqjqj[j2,j,j3,j1]
            PUT Wminj_bb[j2,j,j3,j1] = Tjjjj[j2,j,j3,j1]
      ENDPARDO j, j1, j2, j3
#
      PARDO j3,j,b,j2
#
         REQUEST VSqjqj[b,j3,j,j2] 
         GET t1b_old[b,j]
#
         DO j1
               REQUEST VSqjqj[b,j3,j1,j2] 
               GET t1b_old[b,j1]
#
            Tjjjj[j2,j,j3,j1] = VSqjqj[b,j3,j,j2]*t1b_old[b,j1]
            T1jjjj[j2,j,j3,j1] = VSqjqj[b,j3,j1,j2]*t1b_old[b,j]
            Tjjjj[j2,j,j3,j1] -= T1jjjj[j2,j,j3,j1]
#
            PUT Wminj_bb[j2,j,j3,j1] += Tjjjj[j2,j,j3,j1]
         ENDDO j1
      ENDPARDO j3,j,b,j2
#
      PARDO j,j1,b,b1
#
         REQUEST Tau_bb[b,j,b1,j1] 
#
         DO j2
         DO j3
            REQUEST VSqjqj[b,j2,b1,j3] 
#
            Tjjjj[j2,j,j3,j1] = VSqjqj[b,j2,b1,j3]*Tau_bb[b,j,b1,j1]
            Tjjjj[j2,j,j3,j1]*= 0.25
            PUT Wminj_bb[j2,j,j3,j1] += Tjjjj[j2,j,j3,j1]
         ENDDO j3
         ENDDO j2
#
      ENDPARDO j,j1,b,b1
      sip_barrier
#
      PARDO j, j1, b, b1
#
            Tbjbj[b,j,b1,j1] = 0.0
#
            DO j2
            DO j3
#
               REQUEST Tau_bb[b,j2,b1,j3]
               GET Wminj_bb[j2,j,j3,j1]
#
               T1bjbj[b,j,b1,j1] = Tau_bb[b,j2,b1,j3]*Wminj_bb[j2,j,j3,j1]
               Tbjbj[b,j,b1,j1] += T1bjbj[b,j,b1,j1]
#
            ENDDO j3
            ENDDO j2
#
            Tbjbj[b,j,b1,j1]            *= 0.5
            PREPARE T2new_bb[b,j,b1,j1] += Tbjbj[b,j,b1,j1]
#
      ENDPARDO j, j1, b, b1
      sip_barrier
#
      ENDPROC WminjBB
#     --------------- 

      PROC WminjAB
#     ------------
#      PARDO i, i1, j, j1
#            PUT Wminj_ab[i1,i,j1,j] = 0.0
#      ENDPARDO i, i1, j, j1
#      sip_barrier 
      
      PARDO i, i1, j, j1
#
            REQUEST Vpiqj[i1,i,j1,j] 
            Tiijj[i1,i,j1,j] = Vpiqj[i1,i,j1,j]
            PUT Wminj_ab[i1,i,j1,j] = Tiijj[i1,i,j1,j]
      ENDPARDO i, i1, j, j1
#
      PARDO i,i1,b,j1
#
         REQUEST Vpiqj[i,i1,b,j1] 

         DO j
            GET t1b_old[b,j]
#
            Tiijj[i1,i,j1,j] = Vpiqj[i,i1,b,j1]*t1b_old[b,j]
            PUT Wminj_ab[i1,i,j1,j] += Tiijj[i1,i,j1,j]
         ENDDO j
      ENDPARDO i,i1,b,j1
#
      PARDO a, i1, j, j1
         REQUEST Vpiqj[a,i1,j,j1] 
         DO i
            GET t1a_old[a,i]
            Tiijj[i1,i,j1,j] = Vpiqj[a,i1,j,j1]*t1a_old[a,i]
#
            PUT Wminj_ab[i1,i,j1,j] += Tiijj[i1,i,j1,j]
         ENDDO i
      ENDPARDO a, i1, j, j1

      PARDO i1, j1, a, b
         REQUEST Vpiqj[a,i1,b,j1] 
#
         DO j
         DO i
#
            REQUEST Tau_ab[a,i,b,j] 
            GET t1a_old[a,i]
#
            Tiijj[i1,i,j1,j] = Tau_ab[a,i,b,j]*Vpiqj[a,i1,b,j1]
            Tiijj[i1,i,j1,j]*= 0.5
#
            PUT Wminj_ab[i1,i,j1,j] += Tiijj[i1,i,j1,j]
         ENDDO i
         ENDDO j
      ENDPARDO i1, j1, a, b
      sip_barrier
#
      PARDO i, j, a, b
#
            Taibj[a,i,b,j] = 0.0
#
            DO i1
            DO j1
#
               REQUEST Tau_ab[a,i1,b,j1] 
               GET     Wminj_ab[i1,i,j1,j]
#
               T1aibj[a,i,b,j] = Tau_ab[a,i1,b,j1]*Wminj_ab[i1,i,j1,j]
               Taibj[a,i,b,j] += T1aibj[a,i,b,j]
#
#
            ENDDO j1
            ENDDO i1
#
            PREPARE T2new_ab[a,i,b,j] += Taibj[a,i,b,j]
#
      ENDPARDO i, j, a, b
      sip_barrier
#
      ENDPROC WminjAB
#     --------------- 
# 
      PROC WMINJ 
#     ----------
           CALL WminjAA 
           CALL WminjAB 
           CALL WminjBB 
#
      ENDPROC WMINJ 
#     -------------
#
# In PROCEDURE T2NEWAA the new amplitudes T2new_aa are computed. Contributions 
# involving large two-particle intermediates are computed in the corresponding  
# procedures where these intermediates(temp) are computed. 
#
# Contributions coming from P_(ij)P_(ab)t^e_i t^a_m <mb||ej> are computed 
# elsewhere. 
#
# ----------------------------------------------------------------------------
#
      PROC T2NEWAA    
#     ------------
#
      PARDO a, i, i1
#
#           allocate arrays containing two-particle contracted arrays 
#           --------------------------------------------------------- 
            allocate Liiai[*,i,a,i1] 
            allocate Laiai[a,i,*,i1] 
#
#           fill in allocated arrays 
#           ------------------------ 
            DO i2 
# 
               REQUEST VSpipi[i2,i,a,i1] 
               Liiai[i2,i,a,i1] = VSpipi[i2,i,a,i1] 
#
            ENDDO i2 
#
            DO a2 
#
               REQUEST T2old_aa[a,i,a2,i1] 
               Laiai[a,i,a2,i1] = T2old_aa[a,i,a2,i1] 
#
            ENDDO a2 
#
#           Start computation 
#           ----------------- 
            DO a1 
#
               REQUEST VSpipi[a,i,a1,i1] 
#
               Taiai[a,i,a1,i1]   = VSpipi[a,i,a1,i1]
               TYaiai[a1,i,a,i1]  = 0.0
#
               DO i2
#
                  GET t1a_old[a1,i2]
#
                  T1aiai[a1,i,a,i1] = Liiai[i2,i,a,i1]*t1a_old[a1,i2]
                  T2aiai[a,i,a1,i1] = T1aiai[a1,i,a,i1]
#
                  Taiai[a,i,a1,i1]  += T2aiai[a,i,a1,i1]
                  TYaiai[a1,i,a,i1] -= T1aiai[a1,i,a,i1]
#
               ENDDO i2
#
               DO a2
#
                   GET Fae_a[a1,a2]
                   tmp_aa[a1,a2] = Fae_a[a1,a2]
#
                   DO i2
#
                      GET t1a_old[a1,i2]
                      GET Fme_a[i2,a2]
                      tmp1_aa[a1,a2]  = t1a_old[a1,i2]*Fme_a[i2,a2]
                      tmp1_aa[a1,a2] *= -0.5
                      tmp_aa[a1,a2]  += tmp1_aa[a1,a2]
#
                   ENDDO i2
#
                   T1aiai[a,i,a1,i1] = Laiai[a,i,a2,i1]*tmp_aa[a1,a2]
                   T2aiai[a1,i,a,i1] = T1aiai[a,i,a1,i1]
                   Taiai[a,i,a1,i1] += T1aiai[a,i,a1,i1]
                   TYaiai[a1,i,a,i1]-= T2aiai[a1,i,a,i1]
#
               ENDDO a2
#
               PREPARE T2NEW_aa[a,i,a1,i1] += Taiai[a,i,a1,i1]
               PREPARE T2NEW_aa[a1,i,a,i1] += TYaiai[a1,i,a,i1]
#
            ENDDO a1 
#
#           remove allocated arrays 
#           ----------------------- 
            deallocate Liiai[*,i,a,i1] 
            deallocate Laiai[a,i,*,i1] 
#
      ENDPARDO a, i, i1
#
      PARDO a, i, a1 
#
#           allocate arrays containing two-particle contracted arrays 
#           --------------------------------------------------------- 
            allocate L1aiai[a,i,a1,*] 
            allocate Laaai[a,*,a1,i] 
#
#           fill in allocated arrays 
#           ------------------------ 
            DO i2 
#
               REQUEST T2old_aa[a,i,a1,i2] 
               L1aiai[a,i,a1,i2] = T2old_aa[a,i,a1,i2] 
#
            ENDDO i2 
#
            DO a2
#
               REQUEST VSaaai[a,a2,a1,i]
               Laaai[a,a2,a1,i] = VSaaai[a,a2,a1,i] 
#
            ENDDO a2
#
#           Start computation 
#           ----------------- 
            DO i1 
#
               Taiai[a,i,a1,i1]   = 0.0  
               TY1aiai[a,i1,a1,i] = 0.0
#
               DO i2
#
                  GET Fmi_a[i2,i1]
                  tmp_ii[i2,i1] = Fmi_a[i2,i1]
#
                  DO a2
#
                     GET t1a_old[a2,i1]
                     GET Fme_a[i2,a2]
                     tmp1_ii[i2,i1] = t1a_old[a2,i1]*Fme_a[i2,a2]
                     tmp1_ii[i2,i1] *= 0.5
                     tmp_ii[i2,i1]  += tmp1_ii[i2,i1]
#
                  ENDDO a2
#
                  T1aiai[a,i,a1,i1]  = L1aiai[a,i,a1,i2]*tmp_ii[i2,i1]
                  T2aiai[a,i1,a1,i]  = T1aiai[a,i,a1,i1]
                  Taiai[a,i,a1,i1]  -= T1aiai[a,i,a1,i1]
                  TY1aiai[a,i1,a1,i]+= T2aiai[a,i1,a1,i]
#
               ENDDO i2
#
               DO a2
#
                  GET t1a_old[a2,i1]
#
                  T1aiai[a,i1,a1,i] = Laaai[a,a2,a1,i]*t1a_old[a2,i1]
                  T2aiai[a,i,a1,i1] = T1aiai[a,i1,a1,i]
#
                  Taiai[a,i,a1,i1]  -= T2aiai[a,i,a1,i1]
                  TY1aiai[a,i1,a1,i]+= T1aiai[a,i1,a1,i]
#
               ENDDO a2
#
               PREPARE T2NEW_aa[a,i,a1,i1] += Taiai[a,i,a1,i1]
               PREPARE T2NEW_aa[a,i1,a1,i] += TY1aiai[a,i1,a1,i]
#
            ENDDO i1 
#
#           remove allocated arrays 
#           ----------------------- 
            deallocate L1aiai[a,i,a1,*] 
            deallocate Laaai[a,*,a1,i] 
#
      ENDPARDO a, i, a1 
#
      ENDPROC T2NEWAA    
#     ---------------
#
# In PROCEDURE T2NEWBB the new amplitudes T2new_bb are computed. Contributions 
# involving large two-particle intermediates are computed in the corresponding  
# procedures where these intermediates(temp) are computed. Thus the 
# intermediate Wminj is stored and its contribution computed here.  
#
# Contributions coming from P_(ij)P_(ab)t^e_i t^a_m <mb||ej> are computed 
# elsewhere. 
#
# The new amplitudes T2new_bb are FIRST updated in this procedure and 
# therefore created ate the begining of the procedure. 
#
      PROC T2NEWBB    
#     ------------
#
      PARDO b, j, j1
#
#           allocate arrays containing two-particle contracted arrays 
#           --------------------------------------------------------- 
            allocate Ljjbj[*,j,b,j1] 
            allocate Lbjbj[b,j,*,j1] 
#
#           fill in allocated arrays 
#           ------------------------ 
            DO j2 
# 
               REQUEST VSqjqj[j2,j,b,j1] 
               Ljjbj[j2,j,b,j1] = VSqjqj[j2,j,b,j1] 
#
            ENDDO j2 
#
            DO b2 
#
               REQUEST T2old_bb[b,j,b2,j1] 
               Lbjbj[b,j,b2,j1] = T2old_bb[b,j,b2,j1] 
#
            ENDDO b2 
#
#           Start computation 
#           ----------------- 
            DO b1 
#
               REQUEST VSqjqj[b,j,b1,j1] 
#
               Tbjbj[b,j,b1,j1]   = VSqjqj[b,j,b1,j1]
               TYbjbj[b1,j,b,j1]  = 0.0
#
               DO j2
#
                  GET t1b_old[b1,j2]
#
                  T1bjbj[b1,j,b,j1] = Ljjbj[j2,j,b,j1]*t1b_old[b1,j2]
                  T2bjbj[b,j,b1,j1] = T1bjbj[b1,j,b,j1]
#
                  Tbjbj[b,j,b1,j1]  += T2bjbj[b,j,b1,j1]
                  TYbjbj[b1,j,b,j1] -= T1bjbj[b1,j,b,j1]
#
               ENDDO j2
#
               DO b2
#
                   GET Fae_b[b1,b2]
                   tmp_bb[b1,b2] = Fae_b[b1,b2]
#
                   DO j2
#
                      GET t1b_old[b1,j2]
                      GET Fme_b[j2,b2]
                      tmp1_bb[b1,b2]  = t1b_old[b1,j2]*Fme_b[j2,b2]
                      tmp1_bb[b1,b2] *= -0.5
                      tmp_bb[b1,b2]  += tmp1_bb[b1,b2]
#
                   ENDDO j2
#
                   T1bjbj[b,j,b1,j1] = Lbjbj[b,j,b2,j1]*tmp_bb[b1,b2]
                   T2bjbj[b1,j,b,j1] = T1bjbj[b,j,b1,j1]
                   Tbjbj[b,j,b1,j1] += T1bjbj[b,j,b1,j1]
                   TYbjbj[b1,j,b,j1]-= T2bjbj[b1,j,b,j1]
#
               ENDDO b2
#
               PREPARE T2NEW_bb[b,j,b1,j1] += Tbjbj[b,j,b1,j1]
               PREPARE T2NEW_bb[b1,j,b,j1] += TYbjbj[b1,j,b,j1]
#
            ENDDO b1 
#
#           remove allocated arrays 
#           ----------------------- 
            deallocate Ljjbj[*,j,b,j1] 
            deallocate Lbjbj[b,j,*,j1] 
#
      ENDPARDO b, j, j1
#
      PARDO b, j, b1 
#
#           allocate arrays containing two-particle contracted arrays 
#           --------------------------------------------------------- 
            allocate L1bjbj[b,j,b1,*] 
            allocate Lbbbj[b,*,b1,j] 
#
#           fill in allocated arrays 
#           ------------------------ 
            DO j2 
#
               REQUEST T2old_bb[b,j,b1,j2]
               L1bjbj[b,j,b1,j2] = T2old_bb[b,j,b1,j2] 
#
            ENDDO j2 
#
            DO b2
#
               REQUEST VSbbbj[b,b2,b1,j]
               Lbbbj[b,b2,b1,j] = VSbbbj[b,b2,b1,j] 
#
            ENDDO b2
#
#           Start computation 
#           ----------------- 
            DO j1 
#
               Tbjbj[b,j,b1,j1]   = 0.0  
               TY1bjbj[b,j1,b1,j] = 0.0
#
               DO j2
#
                  GET Fmi_b[j2,j1]
                  tmp_jj[j2,j1] = Fmi_b[j2,j1]
#
                  DO b2
#
                     GET t1b_old[b2,j1]
                     GET Fme_b[j2,b2]
                     tmp1_jj[j2,j1] = t1b_old[b2,j1]*Fme_b[j2,b2]
                     tmp1_jj[j2,j1] *= 0.5
                     tmp_jj[j2,j1]  += tmp1_jj[j2,j1]
#
                  ENDDO b2
#
                  T1bjbj[b,j,b1,j1]  = L1bjbj[b,j,b1,j2]*tmp_jj[j2,j1]
                  T2bjbj[b,j1,b1,j]  = T1bjbj[b,j,b1,j1]
                  Tbjbj[b,j,b1,j1]  -= T1bjbj[b,j,b1,j1]
                  TY1bjbj[b,j1,b1,j]+= T2bjbj[b,j1,b1,j]
#
               ENDDO j2
#
               DO b2
#
                  GET t1b_old[b2,j1]
#
                  T1bjbj[b,j1,b1,j] = Lbbbj[b,b2,b1,j]*t1b_old[b2,j1]
                  T2bjbj[b,j,b1,j1] = T1bjbj[b,j1,b1,j]
#
                  Tbjbj[b,j,b1,j1]  -= T2bjbj[b,j,b1,j1]
                  TY1bjbj[b,j1,b1,j]+= T1bjbj[b,j1,b1,j]
#
               ENDDO b2
#
               PREPARE T2NEW_bb[b,j,b1,j1] += Tbjbj[b,j,b1,j1]
               PREPARE T2NEW_bb[b,j1,b1,j] += TY1bjbj[b,j1,b1,j]
#
            ENDDO j1 
#
#           remove allocated arrays 
#           ----------------------- 
            deallocate L1bjbj[b,j,b1,*] 
            deallocate Lbbbj[b,*,b1,j] 
#
      ENDPARDO b, j, b1 
#
      ENDPROC T2NEWBB    
#     ---------------
#
# In PROCEDURE T2NEWAB the new amplitudes T2new_ab are computed. Contributions 
# involving large two-particle intermediates are computed in the corresponding  
# procedures where these intermediates(temp) are computed. Thus the 
# intermediate Wminj is stored and its contribution computed here.  
#
# Contributions coming from P_(ij)P_(ab)t^e_i t^a_m <mb||ej> are computed 
# elsewhere. 
#
      PROC T2NEWAB    
#     ------------
#
      PARDO a, i, j 
#
            allocate         Laijj[a,i,*,j] 
            allocate         Laibj[a,i,*,j] 
#
            DO j1 
#
               REQUEST Vpiqj[a,i,j1,j] 
               Laijj[a,i,j1,j] = Vpiqj[a,i,j1,j] 
#
            ENDDO j1 
#
            DO b1 
#
               REQUEST T2old_ab[a,i,b1,j] 
               Laibj[a,i,b1,j] = T2old_ab[a,i,b1,j] 
#
            ENDDO b1 
#
            DO b 
#
               REQUEST          Vpiqj[a,i,b,j] 
               Taibj[a,i,b,j] = Vpiqj[a,i,b,j] 
#
               DO j1 
#
                  GET t1b_old[b,j1] 
#
                  T1aibj[a,i,b,j] = Laijj[a,i,j1,j]*t1b_old[b,j1] 
                  Taibj[a,i,b,j] -= T1aibj[a,i,b,j] 
#
               ENDDO j1 
#
               DO b1 
#
                  GET Fae_b[b,b1] 
                  tmp_bb[b,b1] = Fae_b[b,b1]    
#
                  DO j1 
#
                     GET t1b_old[b,j1] 
                     GET Fme_b[j1,b1] 
#
                     tmp1_bb[b,b1]  = t1b_old[b,j1]*Fme_b[j1,b1] 
                     tmp1_bb[b,b1] *= 0.5 
                     tmp_bb[b,b1]  -= tmp1_bb[b,b1]  
#
                  ENDDO j1 
#
                  T1aibj[a,i,b,j] = Laibj[a,i,b1,j]*tmp_bb[b,b1]  
                  Taibj[a,i,b,j] += T1aibj[a,i,b,j] 
#
               ENDDO b1 
#
               PREPARE T2NEW_AB[a,i,b,j] += Taibj[a,i,b,j]  
#
            ENDDO b 
#
            deallocate Laijj[a,i,*,j] 
            deallocate Laibj[a,i,*,j] 
#
      ENDPARDO a, i, j 
#
      PARDO i, b, j 
#
            allocate Liibj[*,i,b,j] 
            allocate L1aibj[*,i,b,j]   
#
            DO i1 
#
               REQUEST Vpiqj[i1,i,b,j]  
               Liibj[i1,i,b,j] = Vpiqj[i1,i,b,j] 
#
            ENDDO i1 
#
            DO a1 
#
               REQUEST T2old_ab[a1,i,b,j]  
               L1aibj[a1,i,b,j] = T2old_ab[a1,i,b,j] 
#
            ENDDO a1 
#
            DO a 
#
               Taibj[a,i,b,j] = 0.0  
#
               DO i1 
#
                  GET t1a_old[a,i1] 
#
                  T1aibj[a,i,b,j] = Liibj[i1,i,b,j]*t1a_old[a,i1] 
                  Taibj[a,i,b,j] -= T1aibj[a,i,b,j] 
#
               ENDDO i1 
#
               DO a1 
#
                  GET Fae_a[a,a1] 
                  tmp_aa[a,a1] = Fae_a[a,a1]    
#
                  DO i1 
#
                     GET t1a_old[a,i1] 
                     GET Fme_a[i1,a1] 
                     tmp1_aa[a,a1]  = t1a_old[a,i1]*Fme_a[i1,a1] 
                     tmp1_aa[a,a1] *= 0.5 
                     tmp_aa[a,a1]  -= tmp1_aa[a,a1]  
#
                  ENDDO i1 
#
                  T1aibj[a,i,b,j] = L1aibj[a1,i,b,j]*tmp_aa[a,a1]  
                  Taibj[a,i,b,j] += T1aibj[a,i,b,j] 
#
               ENDDO a1 
#
               PREPARE T2NEW_AB[a,i,b,j] += Taibj[a,i,b,j]  
#
            ENDDO a 
#
            deallocate Liibj[*,i,b,j] 
            deallocate L1aibj[*,i,b,j]   
#
      ENDPARDO i, b, j 
#
      PARDO a, i, b 
#
            allocate Lbbai[b,*,a,i] 
            allocate L2aibj[a,i,b,*] 
#
            DO b1 
#
               REQUEST Vbbai[b,b1,a,i]  
               Lbbai[b,b1,a,i] = Vbbai[b,b1,a,i] 
#
            ENDDO b1 
#
            DO j2  
#
               REQUEST T2old_ab[a,i,b,j2]   
               L2aibj[a,i,b,j2] = T2old_ab[a,i,b,j2]  
#
            ENDDO j2  
#
            DO j 
#
               Taibj[a,i,b,j] = 0.0  
#
               DO b1 
#
                  GET t1b_old[b1,j] 
#
                  T1aibj[a,i,b,j] = Lbbai[b,b1,a,i]*t1b_old[b1,j]  
                  Taibj[a,i,b,j] += T1aibj[a,i,b,j] 
#
               ENDDO b1 
#
               DO j2 
#
                  GET Fmi_b[j2,j] 
                  tmp_jj[j2,j] = Fmi_b[j2,j]  
#
                  DO b2 
#
                     GET t1b_old[b2,j] 
                     GET Fme_b[j2,b2] 
                     tmp1_jj[j2,j]  = t1b_old[b2,j]*Fme_b[j2,b2] 
                     tmp1_jj[j2,j] *= 0.5 
                     tmp_jj[j2,j]  += tmp1_jj[j2,j] 
#
                  ENDDO b2 
#
                  T1aibj[a,i,b,j] = L2aibj[a,i,b,j2]*tmp_jj[j2,j]  
                  Taibj[a,i,b,j] -= T1aibj[a,i,b,j] 
#
               ENDDO j2 
#
               PREPARE T2NEW_AB[a,i,b,j] += Taibj[a,i,b,j]  
#
            ENDDO j 
#
            deallocate Lbbai[b,*,a,i] 
            deallocate L2aibj[a,i,b,*] 
#
      ENDPARDO a, i, b  
#
      PARDO a, b, j 
#
            allocate L3aibj[a,*,b,j] 
            allocate Laabj[a,*,b,j] 
#
            DO i1 
#
               REQUEST T2old_ab[a,i1,b,j]  
               L3aibj[a,i1,b,j] = T2old_ab[a,i1,b,j] 
#
            ENDDO i1 
#
            DO a1 
#
               REQUEST Vaabj[a,a1,b,j]   
               Laabj[a,a1,b,j] = Vaabj[a,a1,b,j]  
#
            ENDDO a1 
#
            DO i 
#
               Taibj[a,i,b,j] = 0.0  
#
               DO i1 
#
                  GET Fmi_a[i1,i] 
                  tmp_ii[i1,i] = Fmi_a[i1,i] 
#
                  DO a1 
#
                     GET t1a_old[a1,i] 
                     GET Fme_a[i1,a1] 
#
                     tmp1_ii[i1,i]  = t1a_old[a1,i]*Fme_a[i1,a1] 
                     tmp1_ii[i1,i] *= 0.5 
                     tmp_ii[i1,i]  += tmp1_ii[i1,i] 
#
                  ENDDO a1  
#
                  T1aibj[a,i,b,j] = L3aibj[a,i1,b,j]*tmp_ii[i1,i] 
                  Taibj[a,i,b,j] -= T1aibj[a,i,b,j] 
#
               ENDDO i1 
#
               DO a1 
#
                  GET t1a_old[a1,i] 
#
                  T1aibj[a,i,b,j] = Laabj[a,a1,b,j]*t1a_old[a1,i]  
                  Taibj[a,i,b,j] += T1aibj[a,i,b,j] 
#
               ENDDO a1 
#
               PREPARE T2NEW_AB[a,i,b,j] += Taibj[a,i,b,j]  
#
            ENDDO i 
#
            deallocate L3aibj[a,*,b,j] 
            deallocate Laabj[a,*,b,j] 
#
      ENDPARDO a, b, j 
#
      ENDPROC T2NEWAB    
#     ---------------
#
     PROC AOLADDER  
#    -------------
#
#    Form Half back transformed cluster arrays  
#    -----------------------------------------
#
     PARDO a1, i1, i   
#
           allocate LLaiai[*,i,a1,i1] 
#
           DO a  
#
              REQUEST Tau_aa[a, i,a1,i1] 
              REQUEST Tau_aa[a,i1,a1,i]  
              LLaiai[a,i,a1,i1]  = Tau_aa[a, i,a1,i1] 
              Taiai[a,i,a1,i1]   = Tau_aa[a,i1,a1,i] 
              LLaiai[a,i,a1,i1] -= Taiai[a,i,a1,i1]  
#
           ENDDO a  
#
           DO lambda   
#
              Zaa[lambda,i,a1,i1] = 0.0 
#
              DO a  
#
                 Txiai[lambda,i,a1,i1] = LLaiai[a,i,a1,i1]*ca[lambda,a]
                 Zaa[lambda,i,a1,i1]  += Txiai[lambda,i,a1,i1] 
#
              ENDDO a 
#
              PREPARE T1AO_aa[lambda,i,a1,i1] = Zaa[lambda,i,a1,i1] 
#
           ENDDO lambda  
#
           deallocate LLaiai[*,i,a1,i1] 
#
     ENDPARDO a1, i1, i   
#
     PARDO b1, j1, j   
#
           allocate LLbjbj[*,j,b1,j1] 
#
           DO b  
#
              REQUEST Tau_bb[b, j,b1,j1] 
              REQUEST Tau_bb[b,j1,b1,j]  
              LLbjbj[b,j,b1,j1]  = Tau_bb[b, j,b1,j1] 
              Tbjbj[b,j,b1,j1]   = Tau_bb[b,j1,b1,j] 
              LLbjbj[b,j,b1,j1] -= Tbjbj[b,j,b1,j1]  
#
           ENDDO b  
#
           DO lambda   
#
              Zbb[lambda,j,b1,j1] = 0.0 
#
              DO b  
#
                 Txjbj[lambda,j,b1,j1] = LLbjbj[b,j,b1,j1]*cb[lambda,b]
                 Zbb[lambda,j,b1,j1]  += Txjbj[lambda,j,b1,j1] 
#
              ENDDO b 
#
              PREPARE T1AO_bb[lambda,j,b1,j1] = Zbb[lambda,j,b1,j1] 
#
           ENDDO lambda  
#
           deallocate LLbjbj[*,j,b1,j1] 
#
     ENDPARDO b1, j1, j   
#
     PARDO b, j, i   
#
           allocate LLaibj[*,i,b,j] 
#
           DO a  
#
              REQUEST Tau_ab[a,i,b,j] 
              LLaibj[a,i,b,j] = Tau_ab[a,i,b,j] 
#
           ENDDO a  
#
           DO lambda   
#
              Zab[lambda,i,b,j] = 0.0 
#
              DO a  
#
                 Txibj[lambda,i,b,j] = LLaibj[a,i,b,j]*ca[lambda,a]
                 Zab[lambda,i,b,j]  += Txibj[lambda,i,b,j] 
#
              ENDDO a 
#
              PREPARE T1AO_ab[lambda,i,b,j] = Zab[lambda,i,b,j] 
#
           ENDDO lambda  
#
           deallocate LLaibj[*,i,b,j] 
#
     ENDPARDO b, j, i   
     server_barrier 
#
     PARDO lambda, i, i1  
#
           allocate Lxiai[lambda,i,*,i1] 
#
           DO a1 
#
              REQUEST T1AO_aa[lambda,i,a1,i1] 
              Lxiai[lambda,i,a1,i1] = T1AO_aa[lambda,i,a1,i1] 
#
           ENDDO a1 
#
           DO sigma 
#
              ZZaa[lambda,i,sigma,i1]  = 0.0 
#
              DO a1 
#
                 Txixi[lambda,i,sigma,i1] = Lxiai[lambda,i,a1,i1]*ca[sigma,a1]
                 ZZaa[lambda,i,sigma,i1] += Txixi[lambda,i,sigma,i1]  
#
              ENDDO a1 
#
              PREPARE TAO_aa[lambda,i,sigma,i1] = ZZaa[lambda,i,sigma,i1]
#
           ENDDO sigma 
#
           deallocate Lxiai[lambda,i,*,i1] 
#
     ENDPARDO lambda, i, i1   
#
     PARDO lambda, j, j1  
#
           allocate Lxjbj[lambda,j,*,j1] 
#
           DO b1 
#
              REQUEST T1AO_bb[lambda,j,b1,j1] 
              Lxjbj[lambda,j,b1,j1] = T1AO_bb[lambda,j,b1,j1] 
#
           ENDDO b1 
#
           DO sigma 
#
              ZZbb[lambda,j,sigma,j1]  = 0.0 
#
              DO b1 
#
                 Txjxj[lambda,j,sigma,j1] = Lxjbj[lambda,j,b1,j1]*cb[sigma,b1]
                 ZZbb[lambda,j,sigma,j1] += Txjxj[lambda,j,sigma,j1]  
#
              ENDDO b1 
#
              PREPARE TAO_bb[lambda,j,sigma,j1] = ZZbb[lambda,j,sigma,j1]
#
           ENDDO sigma 
#
           deallocate Lxjbj[lambda,j,*,j1] 
#
     ENDPARDO lambda, j, j1   
#
     PARDO lambda, i, j  
#
           allocate Lxibj[lambda,i,*,j] 
#
           DO b 
#
              REQUEST T1AO_ab[lambda,i,b,j]
              Lxibj[lambda,i,b,j] = T1AO_ab[lambda,i,b,j] 
#
           ENDDO b 
#
           DO sigma 
#
              ZZab[lambda,i,sigma,j]  = 0.0 
#
              DO b 
#
                 Txixj[lambda,i,sigma,j] = Lxibj[lambda,i,b,j]*cb[sigma,b]
                 ZZab[lambda,i,sigma,j] += Txixj[lambda,i,sigma,j]  
#
              ENDDO b 
#
              PREPARE TAO_ab[lambda,i,sigma,j] = ZZab[lambda,i,sigma,j]
#
           ENDDO sigma 
#
           deallocate Lxibj[lambda,i,*,j] 
#
     ENDPARDO lambda, i, j   
#
     server_barrier   
#
#    Contract AOINT with half back transformed Amplitudes 
#    ----------------------------------------------------    
#
     PARDO mu, nu 
#
           allocate L1xixi[mu,*,nu,*] 
           allocate L1xjxj[mu,*,nu,*] 
           allocate L1xixj[mu,*,nu,*] 
#
           DO lambda
           DO sigma
#
              execute compute_integral_batch aoint[mu,lambda,nu,sigma]
#
              DO i
              DO i1 
#
                 REQUEST TAO_aa[lambda,i,sigma,i1] 
                 Yaa[mu,i,nu,i1] = aoint[mu,lambda,nu,sigma]*TAO_aa[lambda,i,sigma,i1]
                 L1xixi[mu,i,nu,i1] += Yaa[mu,i,nu,i1]
#
              ENDDO i1 
              ENDDO i
#
              DO j
	      DO j1 
#
                 REQUEST TAO_bb[lambda,j,sigma,j1] 
                 Ybb[mu,j,nu,j1] = aoint[mu,lambda,nu,sigma]*TAO_bb[lambda,j,sigma,j1]
                 L1xjxj[mu,j,nu,j1] += Ybb[mu,j,nu,j1]
#
              ENDDO j1  
              ENDDO j
#
              DO i 
              DO j
#
                 REQUEST TAO_ab[lambda,i,sigma,j] 
                 Yab[mu,i,nu,j]  = aoint[mu,lambda,nu,sigma]*TAO_ab[lambda,i,sigma,j]
                 L1xixj[mu,i,nu,j] += Yab[mu,i,nu,j]
#
              ENDDO j
              ENDDO i  
#
           ENDDO sigma
           ENDDO lambda
#
           DO i 
           DO i1 
#
              Txixi[mu,i,nu,i1] = L1xixi[mu,i,nu,i1]
              PREPARE T2AO_aa[mu,i,nu,i1] = Txixi[mu,i,nu,i1]  
#
           ENDDO i1 
           ENDDO i 
#
           DO j 
           DO j1 
#
              Txjxj[mu,j,nu,j1] = L1xjxj[mu,j,nu,j1]
              PREPARE T2AO_bb[mu,j,nu,j1] = Txjxj[mu,j,nu,j1]  
#
           ENDDO j1 
           ENDDO j 
#
           DO i 
           DO j 
#
              Txixj[mu,i,nu,j] = L1xixj[mu,i,nu,j]
              PREPARE T2AO_ab[mu,i,nu,j] = Txixj[mu,i,nu,j]  
#
           ENDDO j 
           ENDDO i 
#
           deallocate L1xixi[mu,*,nu,*] 
           deallocate L1xjxj[mu,*,nu,*] 
           deallocate L1xixj[mu,*,nu,*] 
#
     ENDPARDO  mu, nu 
#
#    Half transform the t1 arrays. 
#    ----------------------------- 
#
     PARDO a, mu
#
           tpx[a,mu] = 0.0 
#
           DO i  
#
              GET          t1a_old[a,i] 
              t1px[a,mu] = t1a_old[a,i]*ca[mu,i] 
              tpx[a,mu] += t1px[a,mu] 
#
           ENDDO i  
#
           PUT t1a_ax[a,mu] = tpx[a,mu] 
#
     ENDPARDO a, mu
#
     PARDO b, mu
#
           tqx[b,mu] = 0.0 
#
           DO j  
#
              GET          t1b_old[b,j] 
              t1qx[b,mu] = t1b_old[b,j]*cb[mu,j] 
              tqx[b,mu] += t1qx[b,mu] 
#
           ENDDO j  
#
           PUT t1b_bx[b,mu] = tqx[b,mu] 
#
     ENDPARDO b, mu
#
     sip_barrier  
#
#    Perform final transformation 
#    ---------------------------- 
#
     PARDO a, a1, i, i1  
#
           T1aiai[a,i,a1,i1] = 0.0  
           T2aiai[a,i,a1,i1] = 0.0  
#
           DO nu  
#
              GET                 t1a_ax[a1,nu] 
              TXaiai[a,i,nu,i1] = 0.0 
#
              DO mu   
#
                 REQUEST              T2AO_aa[mu,i,nu,i1] 
                 Taixi[a,i,nu,i1]   = T2AO_aa[mu,i,nu,i1]*ca[mu,a]
                 TXaiai[a,i,nu,i1] += Taixi[a,i,nu,i1]   
#
              ENDDO mu   
#
              TYaiai[a,i,a1,i1]  = TXaiai[a,i,nu,i1]*ca[nu,a1]
              TYaiai[a,i,a1,i1] *= 0.5  
              T1aiai[a,i,a1,i1] += TYaiai[a,i,a1,i1]
#
              TYaiai[a,i,a1,i1]  = TXaiai[a,i,nu,i1]*t1a_ax[a1,nu]
              TYaiai[a,i,a1,i1] *= -0.5
              T2aiai[a,i,a1,i1] += TYaiai[a,i,a1,i1]
#
           ENDDO nu  
#
           T3aiai[a1,i,a,i1]            = T2aiai[a,i,a1,i1] 
           T3aiai[a1,i,a,i1]           *= -1.0  
           T1aiai[a,i,a1,i1]           += T2aiai[a,i,a1,i1] 
           PREPARE T2new_aa[a,i,a1,i1] += T1aiai[a,i,a1,i1] 
           PREPARE T2new_aa[a1,i,a,i1] += T3aiai[a1,i,a,i1] 
#
     ENDPARDO a, a1, i, i1  
#
     PARDO b, b1, j, j1  
#
           T1bjbj[b,j,b1,j1] = 0.0  
           T2bjbj[b,j,b1,j1] = 0.0  
#
           DO nu  
#
              GET                 t1b_bx[b1,nu] 
              TXbjbj[b,j,nu,j1] = 0.0 
#
              DO mu   
#
                 REQUEST              T2AO_bb[mu,j,nu,j1] 
                 Tbjxj[b,j,nu,j1]   = T2AO_bb[mu,j,nu,j1]*cb[mu,b]
                 TXbjbj[b,j,nu,j1] += Tbjxj[b,j,nu,j1]   
#
              ENDDO mu   
#
              TYbjbj[b,j,b1,j1]  = TXbjbj[b,j,nu,j1]*cb[nu,b1]
              TYbjbj[b,j,b1,j1] *= 0.5  
              T1bjbj[b,j,b1,j1] += TYbjbj[b,j,b1,j1]
#
              TYbjbj[b,j,b1,j1]  = TXbjbj[b,j,nu,j1]*t1b_bx[b1,nu]
              TYbjbj[b,j,b1,j1] *= -0.5
              T2bjbj[b,j,b1,j1] += TYbjbj[b,j,b1,j1]
#
           ENDDO nu  
#
           T3bjbj[b1,j,b,j1]            = T2bjbj[b,j,b1,j1] 
           T3bjbj[b1,j,b,j1]           *= -1.0  
           T1bjbj[b,j,b1,j1]           += T2bjbj[b,j,b1,j1] 
           PREPARE T2new_bb[b,j,b1,j1] += T1bjbj[b,j,b1,j1] 
           PREPARE T2new_bb[b1,j,b,j1] += T3bjbj[b1,j,b,j1] 
#
     ENDPARDO b, b1, j, j1  
#
     PARDO a, b, i, j  
#
           T1aibj[a,i,b,j] = 0.0  
#
           DO nu  
#
              GET                t1b_bx[b,nu] 
              TXaibj[a,i,nu,j] = 0.0 
              TZaibj[a,i,nu,j] = 0.0 
#
              DO mu   
#
                 REQUEST             T2AO_ab[mu,i,nu,j] 
                 GET                 t1a_ax[a,mu] 
                 Taixj[a,i,nu,j]   = T2AO_ab[mu,i,nu,j]*ca[mu,a]
                 TXaibj[a,i,nu,j] += Taixj[a,i,nu,j]   
#
                 Taixj[a,i,nu,j]   = T2AO_ab[mu,i,nu,j]*t1a_ax[a,mu]
                 TZaibj[a,i,nu,j] += Taixj[a,i,nu,j]   
#
              ENDDO mu   
#
              TYaibj[a,i,b,j]  = TXaibj[a,i,nu,j]*cb[nu,b]
              T1aibj[a,i,b,j] += TYaibj[a,i,b,j]
#
              TYaibj[a,i,b,j]  = TXaibj[a,i,nu,j]*t1b_bx[b,nu]
              T1aibj[a,i,b,j] -= TYaibj[a,i,b,j]
#
              TYaibj[a,i,b,j]  = TZaibj[a,i,nu,j]*cb[nu,b]
              T1aibj[a,i,b,j] -= TYaibj[a,i,b,j]
#
           ENDDO nu  
#
           PREPARE T2new_ab[a,i,b,j] += T1aibj[a,i,b,j] 
#
     ENDPARDO a, b, i, j  
#
     sip_barrier  

     ENDPROC AOLADDER  
#    ----------------
#
# This SUPER procedure contains the procedures WAEBFAA, WAEBFBB, and 
# WAEBFAB which compute the contributions to these intermediates excluding  
# the terms containing the 4-virtual integrals. The intermediates are 
# computed as temporary arrays and used to update the amplitudes as they 
# are formed. The AOLADDER contribution is computed seperately.  
#
     PROC WAEBFAA 
#     ------------ 
#
# --------------------------------------------------------------------- 
# Comute contribution coming from:  
# 1/2 tau^{ab}_{mn} * [ 1/4 tau^{ef}_{ij} * (V^{mn}_{ef} - V^{mn}_{fe}]  
# --------------------------------------------------------------------- 
#
     PARDO i, i1, i2, i3
            PUT Wminj_aa[i,i1,i2,i3] = 0.0
     ENDPARDO i, i1, i2, i3
     sip_barrier

     PARDO i, i1, i2  
#
           DO i3 
#
              IF i < i3  
#
                 Tiiii[i1,i,i2,i3] = 0.0
#
                 DO a  
                 DO a1  
#
                    REQUEST Tau_aa[a,i,a1,i3] 
                    REQUEST VSpipi[a,i1,a1,i2] 
#
                    T1iiii[i1,i,i2,i3] = Tau_aa[a,i,a1,i3]*VSpipi[a,i1,a1,i2]
                    Tiiii[i1,i,i2,i3] += T1iiii[i1,i,i2,i3]
#
                 ENDDO a1  
                 ENDDO a   
#
                 T1iiii[i2,i3,i1,i]        = Tiiii[i1,i,i2,i3]
                 PUT Wminj_aa[i1,i,i2,i3] += Tiiii[i1,i,i2,i3] 
                 PUT Wminj_aa[i2,i3,i1,i] += T1iiii[i2,i3,i1,i] 
#
              ENDIF # i < i3  
#
              IF i == i3  
#
                 Tiiii[i1,i,i2,i3] = 0.0
#
                 DO a  
                 DO a1  
#
                    REQUEST Tau_aa[a,i,a1,i3] 
                    REQUEST VSpipi[a,i1,a1,i2] 
#
                    T1iiii[i1,i,i2,i3] = Tau_aa[a,i,a1,i3]*VSpipi[a,i1,a1,i2]
                    Tiiii[i1,i,i2,i3] += T1iiii[i1,i,i2,i3]
#
                 ENDDO a1  
                 ENDDO a   
#
                 PUT Wminj_aa[i1,i,i2,i3] += Tiiii[i1,i,i2,i3] 
#
              ENDIF # i == i3  
#
           ENDDO i3 
#
     ENDPARDO i, i1, i2  
     sip_barrier 
#
     PARDO a, i, i3 
#
           DO a1 
#
              IF a < a1 
#
                 R1aiai[a,i,a1,i3] = 0.0 
#
                 DO i1   
                 DO i2   
#
                    REQUEST Tau_aa[a,i1,a1,i2] 
                    GET Wminj_aa[i1,i,i2,i3] 
#
                    Taiai[a,i,a1,i3]   = Tau_aa[a,i1,a1,i2]*Wminj_aa[i1,i,i2,i3]
                    R1aiai[a,i,a1,i3] += Taiai[a,i,a1,i3]  
#
                 ENDDO i2   
                 ENDDO i1    
#
                 R1aiai[a,i,a1,i3]           *= 0.125
                 Taiai[a1,i3,a,i]             = R1aiai[a,i,a1,i3]  
                 PREPARE T2new_aa[a,i,a1,i3] += R1aiai[a,i,a1,i3]
                 PREPARE T2new_aa[a1,i3,a,i] += Taiai[a1,i3,a,i]
#
              ENDIF # a < a1 
#
              IF a == a1 
#
                 R1aiai[a,i,a1,i3] = 0.0 
#
                 DO i1   
                 DO i2   
#
                    REQUEST Tau_aa[a,i1,a1,i2] 
                    GET Wminj_aa[i1,i,i2,i3] 
#
                    Taiai[a,i,a1,i3]  = Tau_aa[a,i1,a1,i2]*Wminj_aa[i1,i,i2,i3]
                    R1aiai[a,i,a1,i3] += Taiai[a,i,a1,i3]  
#
                 ENDDO i2   
                 ENDDO i1    
#
                 R1aiai[a,i,a1,i3]       *= 0.125
                 PREPARE T2new_aa[a,i,a1,i3] += R1aiai[a,i,a1,i3]
#
              ENDIF # a == a1 
#
           ENDDO a1 
#
     ENDPARDO a,  i, i3 
     sip_barrier 
#
     ENDPROC WAEBFAA 
#    --------------- 
#
# --------------------------------------------------------------------------- 
#
#    ------------------------------------------------------------------------ 
#
     PROC WAEBFBB 
#    ------------- 
#
# --------------------------------------------------------------------- 
# Comute contribution coming from:  
# 1/2 tau^{ab}_{mn} * [ 1/4 tau^{ef}_{ij} * (V^{mn}_{ef} - V^{mn}_{fe}]  
# --------------------------------------------------------------------- 
#
     PARDO j, j1, j2, j3
            PUT Wminj_bb[j,j1,j2,j3] = 0.0
     ENDPARDO j, j1, j2, j3
     sip_barrier

     PARDO j, j1, j2  
#
           DO j3 
#
              IF j < j3  
#
                 Tjjjj[j1,j,j2,j3] = 0.0
#
                 DO b  
                 DO b1  
#
                    REQUEST Tau_bb[b,j,b1,j3] 
                    REQUEST VSqjqj[b,j1,b1,j2] 
#
                    T1jjjj[j1,j,j2,j3] = Tau_bb[b,j,b1,j3]*VSqjqj[b,j1,b1,j2]
                    Tjjjj[j1,j,j2,j3] += T1jjjj[j1,j,j2,j3]
#
                 ENDDO b1  
                 ENDDO b   
#
                 T1jjjj[j2,j3,j1,j]        = Tjjjj[j1,j,j2,j3]
                 PUT Wminj_bb[j1,j,j2,j3] += Tjjjj[j1,j,j2,j3] 
                 PUT Wminj_bb[j2,j3,j1,j] += T1jjjj[j2,j3,j1,j] 
#
              ENDIF # j < j3  
#
              IF j == j3  
#
                 Tjjjj[j1,j,j2,j3] = 0.0
#
                 DO b  
                 DO b1  
#
                    REQUEST Tau_bb[b,j,b1,j3] 
                    REQUEST VSqjqj[b,j1,b1,j2] 
#
                    T1jjjj[j1,j,j2,j3] = Tau_bb[b,j,b1,j3]*VSqjqj[b,j1,b1,j2]
                    Tjjjj[j1,j,j2,j3] += T1jjjj[j1,j,j2,j3]
#
                 ENDDO b1  
                 ENDDO b   
#
                 PUT Wminj_bb[j1,j,j2,j3] += Tjjjj[j1,j,j2,j3] 
#
              ENDIF # j == j3  
#
           ENDDO j3 
#
     ENDPARDO j, j1, j2  
     sip_barrier 
#
     PARDO b, j, j3 
#
           DO b1 
#
              IF b < b1 
#
                 R1bjbj[b,j,b1,j3] = 0.0 
#
                 DO j1   
                 DO j2   
#
                    REQUEST Tau_bb[b,j1,b1,j2] 
                    GET Wminj_bb[j1,j,j2,j3] 
#
                    Tbjbj[b,j,b1,j3]   = Tau_bb[b,j1,b1,j2]*Wminj_bb[j1,j,j2,j3]
                    R1bjbj[b,j,b1,j3] += Tbjbj[b,j,b1,j3]  
#
                 ENDDO j2   
                 ENDDO j1    
#
                 R1bjbj[b,j,b1,j3]           *= 0.125
                 Tbjbj[b1,j3,b,j]             = R1bjbj[b,j,b1,j3]  
                 PREPARE T2new_bb[b,j,b1,j3] += R1bjbj[b,j,b1,j3]
                 PREPARE T2new_bb[b1,j3,b,j] += Tbjbj[b1,j3,b,j]
#
              ENDIF # b < b1 
#
              IF b == b1 
#
                 R1bjbj[b,j,b1,j3] = 0.0 
#
                 DO j1   
                 DO j2   
#
                    REQUEST Tau_bb[b,j1,b1,j2] 
                    GET Wminj_bb[j1,j,j2,j3] 
#
                    Tbjbj[b,j,b1,j3]  = Tau_bb[b,j1,b1,j2]*Wminj_bb[j1,j,j2,j3]
                    R1bjbj[b,j,b1,j3] += Tbjbj[b,j,b1,j3]  
#
                 ENDDO j2   
                 ENDDO j1    
#
                 R1bjbj[b,j,b1,j3]       *= 0.125
                 PREPARE T2new_bb[b,j,b1,j3] += R1bjbj[b,j,b1,j3]
#
              ENDIF # b == b1 
#
           ENDDO b1 
#
     ENDPARDO b,  j, j3 
     sip_barrier 
#
     ENDPROC WAEBFBB 
#    --------------- 
#
      PROC WAEBFAB 
#     ------------ 
#
# --------------------------------------------------------------------- 
# Comute contribution coming from:  
# 1/2 tau^{ab}_{mn} * [ 1/4 tau^{ef}_{ij} * (V^{mn}_{ef} - V^{mn}_{fe}]  
# --------------------------------------------------------------------- 
#
      pardo i,i1,j,j1
          PUT Wminj_ab[i,i1,j,j1] = 0.0
      endpardo i,i1,j,j1
      sip_barrier

      PARDO i, j, i1, j1 
#
            Tiijj[i1,i,j1,j] = 0.0 
#
            DO a  
            DO b 
#
               REQUEST Tau_ab[a,i,b,j]  
               REQUEST Vpiqj[a,i1,b,j1]
#
               T1iijj[i1,i,j1,j] = Vpiqj[a,i1,b,j1]*Tau_ab[a,i,b,j] 
               Tiijj[i1,i,j1,j] += T1iijj[i1,i,j1,j]  
#
            ENDDO b 
            ENDDO a  
#
            PUT Wminj_ab[i1,i,j1,j] = Tiijj[i1,i,j1,j] 
#
      ENDPARDO i, j, i1, j1 
      sip_barrier 
#
      PARDO a, i, b, j  
#
            R1aibj[a,i,b,j] = 0.0 
#
            DO i1   
            DO j1  
#
               REQUEST Tau_ab[a,i1,b,j1] 
               GET Wminj_ab[i1,i,j1,j] 
#
               Taibj[a,i,b,j]   = Tau_ab[a,i1,b,j1]*Wminj_ab[i1,i,j1,j] 
               R1aibj[a,i,b,j] += Taibj[a,i,b,j]  
#
            ENDDO j1  
            ENDDO i1  
#
            R1aibj[a,i,b,j]           *= 0.5  
            PREPARE T2new_ab[a,i,b,j] += R1aibj[a,i,b,j] 
#
      ENDPARDO a, i, b, j  
      sip_barrier 
#
      ENDPROC WAEBFAB 
#     --------------- 
      PROC WAEBF 
# 
           CALL WAEBFAA 
           CALL WAEBFAB 
           CALL WAEBFBB 
#
      ENDPROC WAEBF 
#     -------------
#
# In the procedures WMEBJAA, WMEBJBB, WMEBJAB, and WMEBJBA these  
# intermediates are formed as temporary arrarys. The contribution to the 
# outout arrays is computed directly from these temporary arrays so 
# that the array is never stored.   
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
      PROC WMEBJAA 
#     ------------
#
      PARDO a, a1, i, i1  
#
               REQUEST              Viaai[i1,a1,a,i] 
               REQUEST              Vaaii[a,a1,i1,i] 
               REQUEST              e5aiai[a1,i1,a,i] 
#
               TYaiai[a1,i1,a,i] = 0.
#
               DO i2
#
                  REQUEST VSpipi[a1,i1,i,i2] 
                  GET t1a_old[a,i2]
#
                  T1aiai[a1,i1,a,i]  = VSpipi[a1,i1,i,i2]*t1a_old[a,i2]
                  TYaiai[a1,i1,a,i] -= T1aiai[a1,i1,a,i]
#
               ENDDO i2

               Taiai[a1,i1,a,i]   = Vaaii[a,a1,i1,i]
               TYaiai[a1,i1,a,i] -= Taiai[a1,i1,a,i]
               Taiai[a1,i1,a,i] = Viaai[i1,a1,a,i]
               TYaiai[a1,i1,a,i] += Taiai[a1,i1,a,i]
               TYaiai[a1,i1,a,i] += e5aiai[a1,i1,a,i]
               PREPARE TAUP_aa[a1,i1,a,i] = TYaiai[a1,i1,a,i] 
#
      ENDPARDO a, a1, i, i1  
      server_barrier 

      PARDO a,i,a2,i2
         REQUEST              T2old_aa[a2,i,a,i2] 
         GET                  t1a_old[a2,i] 
         GET                  t1a_old[a,i2] 
 
         tai[a,i2]          = t1a_old[a,i2] 
         T1aiai[a2,i2,a,i]  = t1a_old[a2,i]^tai[a,i2] 
         T2aiai[a2,i2,a,i]  = t2old_aa[a2,i,a,i2] 
         T2aiai[a2,i2,a,i] *= 0.5 
         T2aiai[a2,i2,a,i] += T1aiai[a2,i2,a,i] 

         DO i1
         DO a1 
#
            REQUEST              VSpipi[a1,i1,a2,i2] 
#
            Tyaiai[a1,i1,a,i] = 0.
#
            T3aiai[a1,i1,a,i]  = VSpipi[a1,i1,a2,i2]*T2aiai[a2,i2,a,i] 
            TYaiai[a1,i1,a,i] -= T3aiai[a1,i1,a,i]  
#
            PREPARE TAUP_aa[a1,i1,a,i] += TYaiai[a1,i1,a,i]
         ENDDO a1
         ENDDO i1
      ENDPARDO a,i,a2,i2 

      PARDO a,i,b,j 
#
         REQUEST T2old_ab[a,i,b,j] 
#
         DO i1
         DO a1 
            REQUEST Vpiqj[a1,i1,b,j]
#
            T1aiai[a1,i1,a,i]  = Vpiqj[a1,i1,b,j]*T2old_ab[a,i,b,j]
            T1aiai[a1,i1,a,i] *= 0.5

            PREPARE TAUP_aa[a1,i1,a,i] += T1aiai[a1,i1,a,i]
         ENDDO a1
         ENDDO i1
#
      ENDPARDO a,i,b,j
      server_barrier
#
# Contributions to T2new_aa 
# ------------------------- 
#
      PARDO a, i, a1, i1  
            REQUEST              TAUP_aa[a1,i1,a,i]    
#
            DO i2 
            DO a2 
               REQUEST              T2old_aa[a2,i2,a1,i1] 
#
               R1aiai[a2,i2,a,i]  = T2old_aa[a2,i2,a1,i1]*TAUP_aa[a1,i1,a,i] 
               R2aiai[a2,i,a,i2]            = R1aiai[a2,i2,a,i]
               R2aiai[a2,i,a,i2]           *= -1.0
               R3aiai[a,i2,a2,i]            = R2aiai[a2,i,a,i2]
               R4aiai[a,i,a2,i2]            = R1aiai[a2,i2,a,i]
#
               PREPARE T2new_aa[a2,i2,a,i] += R1aiai[a2,i2,a,i] 
               PREPARE T2new_aa[a2,i,a,i2] += R2aiai[a2,i,a,i2] 
               PREPARE T2new_aa[a,i2,a2,i] += R3aiai[a,i2,a2,i] 
               PREPARE T2new_aa[a,i,a2,i2] += R4aiai[a,i,a2,i2] 
            ENDDO a2 
            ENDDO i2 
#
      ENDPARDO a, i, a1, i1  
#
# Contributions to T2new_ab 
# ------------------------- 
#
      PARDO a, i, a1, i1 
#
            REQUEST            TAUP_aa[a1,i1,a,i]   
#
            DO j  
            DO b
#
               REQUEST            T2old_ab[a1,i1,b,j] 
#
               R1aibj[a,i,b,j]  = TAUP_aa[a1,i1,a,i]*T2old_ab[a1,i1,b,j] 
               PREPARE T2new_ab[a,i,b,j] += R1aibj[a,i,b,j]
            ENDDO b  
            ENDDO j  
#
      ENDPARDO a, i, a1, i1 
#
      ENDPROC WMEBJAA 
#     ---------------
#
      PROC WMEBJBB 
#     ------------
#
      PARDO j, b, j1, b1
#
               REQUEST              Vjbbj[j1,b1,b,j] 
               REQUEST              Vbbjj[b,b1,j1,j] 
               REQUEST              e5bjbj[b1,j1,b,j] 
#
               TYbjbj[b1,j1,b,j] = 0.
#
               DO j2  
#
                  REQUEST              VSqjqj[b1,j1,j,j2] 
                  GET                  t1b_old[b,j2] 
#
                  T1bjbj[b1,j1,b,j]  = VSqjqj[b1,j1,j,j2]*t1b_old[b,j2]  
                  TYbjbj[b1,j1,b,j] -= T1bjbj[b1,j1,b,j]  
#
               ENDDO j2  
#
               T1bjbj[b1,j1,b,j]  = Vbbjj[b,b1,j1,j] 
               TYbjbj[b1,j1,b,j] -= T1bjbj[b1,j1,b,j]  
               T1bjbj[b1,j1,b,j] = Vjbbj[j1,b1,b,j] 
               TYbjbj[b1,j1,b,j] += T1bjbj[b1,j1,b,j]
               TYbjbj[b1,j1,b,j] += e5bjbj[b1,j1,b,j]  
               PREPARE TAUP_bb[b1,j1,b,j] = TYbjbj[b1,j1,b,j] 
#
      ENDPARDO j, b, j1, b1
      server_barrier

      PARDO b,j,b2,j2 

         REQUEST              T2old_bb[b2,j,b,j2] 
         GET                  t1b_old[b2,j] 
         GET                  t1b_old[b,j2] 
#
         tbj[b,j2]          = t1b_old[b,j2] 
         T1bjbj[b2,j2,b,j]  = t1b_old[b2,j]^tbj[b,j2] 
         T2bjbj[b2,j2,b,j]  = t2old_bb[b2,j,b,j2] 
         T2bjbj[b2,j2,b,j] *= 0.5 
         T2bjbj[b2,j2,b,j] += T1bjbj[b2,j2,b,j] 
#
         DO j1
         DO b1 
#
            REQUEST              VSqjqj[b1,j1,b2,j2] 
#
            TYbjbj[b1,j1,b,j] = 0. 
#
            T3bjbj[b1,j1,b,j]  = VSqjqj[b1,j1,b2,j2]*T2bjbj[b2,j2,b,j] 
            TYbjbj[b1,j1,b,j] -= T3bjbj[b1,j1,b,j]  
#
            PREPARE TAUP_bb[b1,j1,b,j] += TYbjbj[b1,j1,b,j] 
#
         ENDDO b1  
         ENDDO j1
#
      ENDPARDO b,j,b2,j2

      PARDO b,j,a,i
               
               REQUEST              T2old_ab[a,i,b,j]

               DO b1 
               DO j1 
#
                  REQUEST              Vpiqj[a,i,b1,j1] 
#
                  T1bjbj[b1,j1,b,j]  = Vpiqj[a,i,b1,j1]*T2old_ab[a,i,b,j]
                  T1bjbj[b1,j1,b,j] *= 0.5
#
                  PREPARE TAUP_bb[b1,j1,b,j] += T1bjbj[b1,j1,b,j]
#
               ENDDO j1
               ENDDO b1
 
      ENDPARDO b,j,a,i
      server_barrier 
#
# Contributions to T2new_bb 
# ------------------------- 
#
      PARDO j, b, b1, j1 
#
            REQUEST              TAUP_bb[b1,j1,b,j]    
#
            DO j2
            DO b2
#
               REQUEST              T2old_bb[b2,j2,b1,j1] 
               R1bjbj[b2,j2,b,j]  = T2old_bb[b2,j2,b1,j1]*TAUP_bb[b1,j1,b,j] 
#
               R2bjbj[b2,j,b,j2]            = R1bjbj[b2,j2,b,j] 
               R2bjbj[b2,j,b,j2]           *= -1.0  
               R3bjbj[b,j2,b2,j]            = R1bjbj[b2,j2,b,j] 
               R3bjbj[b,j2,b2,j]           *= -1.0  
               R4bjbj[b,j,b2,j2]            = R1bjbj[b2,j2,b,j] 
#
               PREPARE T2new_bb[b2,j2,b,j] += R1bjbj[b2,j2,b,j] 
               PREPARE T2new_bb[b2,j,b,j2] += R2bjbj[b2,j,b,j2] 
               PREPARE T2new_bb[b,j2,b2,j] += R3bjbj[b,j2,b2,j] 
               PREPARE T2new_bb[b,j,b2,j2] += R4bjbj[b,j,b2,j2] 
            ENDDO b2
            ENDDO j2 
#
      ENDPARDO j, b, b1, j1 
#
# Contributions to T2new_ab 
# ------------------------- 
#
      PARDO a, i, b1, j1 
#
            REQUEST            T2old_ab[a,i,b1,j1]  
#
            DO b  
            DO j  
#
               REQUEST            TAUP_bb[b1,j1,b,j] 
#
               R1aibj[a,i,b,j]  = T2old_ab[a,i,b1,j1]*TAUP_bb[b1,j1,b,j] 
               PREPARE T2new_ab[a,i,b,j] += R1aibj[a,i,b,j]
            ENDDO j  
            ENDDO b  
#
#
      ENDPARDO a, i, b1, j1 
#
      ENDPROC WMEBJBB 
#     ---------------

      PROC WMEBJAB 
#     ------------
#
      PARDO j, b, i, a
#
               REQUEST           Viabj[i,a,b,j] 
               REQUEST           e5aibj[a,i,b,j]
#
               Taibj[a,i,b,j] = 0.
#
               DO j1
                  REQUEST           Vpiqj[a,i,j,j1] 
                  GET               t1b_old[b,j1] 
#
                  T1aibj[a,i,b,j] = Vpiqj[a,i,j,j1]*t1b_old[b,j1] 
                  Taibj[a,i,b,j] -= T1aibj[a,i,b,j] 
               ENDDO j1

               T1aibj[a,i,b,j]  = Viabj[i,a,b,j] 
               Taibj[a,i,b,j] += T1aibj[a,i,b,j]
               Taibj[a,i,b,j] += e5aibj[a,i,b,j] 
               PREPARE TAUP_ab[a,i,b,j] = Taibj[a,i,b,j] 
#
      ENDPARDO j, b, i, a
      server_barrier

      PARDO j,b,j1,b1
#
               REQUEST              t2old_bb[b1,j,b,j1] 
               GET                  t1b_old[b1,j] 
               GET                  t1b_old[b,j1] 
# 
               tbj[b,j1]          = t1b_old[b,j1] 
               T2bjbj[b1,j,b,j1]  = t1b_old[b1,j]^tbj[b,j1] 
               T1bjbj[b1,j,b,j1]  = 0.5*T2old_bb[b1,j,b,j1] 
               T1bjbj[b1,j,b,j1] += T2bjbj[b1,j,b,j1] 
#
               DO i  
               DO a 
#
                  REQUEST              Vpiqj[a,i,b1,j1] 
#
                  Taibj[a,i,b,j]  = 0.
                  T1aibj[a,i,b,j] = T1bjbj[b1,j,b,j1]*Vpiqj[a,i,b1,j1] 
                  Taibj[a,i,b,j]  -= T1aibj[a,i,b,j] 
#   
                  PREPARE TAUP_ab[a,i,b,j] += Taibj[a,i,b,j]
               ENDDO a 
               ENDDO i  
#
      ENDPARDO j,b,j1,b1
#
      PARDO b,j,a1,i1
#
         REQUEST            T2old_ab[a1,i1,b,j]       
#
         DO a
         DO i
#
            REQUEST            VSpipi[a1,i1,a,i]
#
            T1aibj[a,i,b,j]  = T2old_ab[a1,i1,b,j]*VSpipi[a1,i1,a,i]
            T1aibj[a,i,b,j] *= 0.5
            PREPARE TAUP_ab[a,i,b,j] += T1aibj[a,i,b,j]
#
         ENDDO i
         ENDDO a
#
      ENDPARDO b,j,a1,i1

      server_barrier 
#
# Contribution to T2new_bb 
# ------------------------ 
#
      PARDO b, j, a, i 
#
            REQUEST              TAUP_ab[a,i,b,j]    
#
            DO j1 
            DO b1 
#
               REQUEST              T2old_ab[a,i,b1,j1] 
#
               R1bjbj[b1,j1,b,j]  = T2old_ab[a,i,b1,j1]*TAUP_ab[a,i,b,j] 
#
               R2bjbj[b1,j,b,j1]            = R1bjbj[b1,j1,b,j] 
               R2bjbj[b1,j,b,j1]           *= -1.0  
               R3bjbj[b,j1,b1,j]            = R1bjbj[b1,j1,b,j] 
               R3bjbj[b,j1,b1,j]           *= -1.0  
               R4bjbj[b,j,b1,j1]            = R1bjbj[b1,j1,b,j] 
#
               PREPARE T2new_bb[b1,j1,b,j] += R1bjbj[b1,j1,b,j] 
               PREPARE T2new_bb[b1,j,b,j1] += R2bjbj[b1,j,b,j1] 
               PREPARE T2new_bb[b,j1,b1,j] += R3bjbj[b,j1,b1,j] 
               PREPARE T2new_bb[b,j,b1,j1] += R4bjbj[b,j,b1,j1] 
            ENDDO b1 
            ENDDO j1 
#
      ENDPARDO b, j, a, i
#
# Contribution to T2new_ab 
# ------------------------ 
#
      PARDO i1, a1, a, i
#
            REQUEST              T2old_aa[a1,i1,a,i]
#
            DO j 
            DO b 
#
               REQUEST              TAUP_ab[a,i,b,j]    
#
               R1aibj[a1,i1,b,j]  = T2old_aa[a1,i1,a,i]*TAUP_ab[a,i,b,j]  
               PREPARE T2new_ab[a1,i1,b,j] += R1aibj[a1,i1,b,j] 
            ENDDO b 
            ENDDO j 
#
      ENDPARDO i1, a1, a, i
      server_barrier 
#
      ENDPROC WMEBJAB 
#     ---------------
#
      PROC WMEBJBA  
#     ------------
#
      PARDO i, a, j, b
#
               REQUEST           Viabj[i,a,b,j]   
               REQUEST           e6aibj[a,i,b,j] 
#
               Taibj[a,i,b,j] = 0.
#
               DO i1
                  REQUEST           Vjbii[j,b,i1,i] 
                  GET               t1a_old[a,i1] 
#
                  T1aibj[a,i,b,j] = Vjbii[j,b,i1,i]*t1a_old[a,i1] 
                  Taibj[a,i,b,j] -= T1aibj[a,i,b,j] 
               ENDDO i1
#
               T1aibj[a,i,b,j] = Viabj[i,a,b,j] 
               Taibj[a,i,b,j] += T1aibj[a,i,b,j] 
               Taibj[a,i,b,j] += e6aibj[a,i,b,j] 
#
               PREPARE TAUP_ab[a,i,b,j] = Taibj[a,i,b,j] 
#
      ENDPARDO i, a, j, b
      server_barrier

      PARDO a,i,a1,i1
#
               REQUEST              T2old_aa[a1,i,a,i1] 
               GET                  t1a_old[a1,i] 
               GET                  t1a_old[a,i1] 
#
               tai[a,i1]          = t1a_old[a,i1] 
               T2aiai[a,i,a1,i1]  = t1a_old[a1,i]^tai[a,i1] 
               T1aiai[a,i,a1,i1]  = t2old_aa[a1,i,a,i1] 
               T1aiai[a,i,a1,i1] *= 0.5  
               T1aiai[a,i,a1,i1] += T2aiai[a,i,a1,i1] 
#
               DO j 
               DO b
#
                  REQUEST              Vpiqj[a1,i1,b,j] 
#
                  Taibj[a,i,b,j]     = 0.
                  T1aibj[a,i,b,j]    = T1aiai[a,i,a1,i1]*Vpiqj[a1,i1,b,j] 
                  Taibj[a,i,b,j]    -= T1aibj[a,i,b,j] 
#
                  PREPARE TAUP_ab[a,i,b,j] += Taibj[a,i,b,j]
               ENDDO  b
               ENDDO j
#
      ENDPARDO a,i,a1,i1
#
      PARDO a, i, b1, j1
#
         REQUEST            T2old_ab[a,i,b1,j1] 
#
         DO b
         DO j
            REQUEST            VSqjqj[b1,j1,b,j]
#
            T1aibj[a,i,b,j]  = T2old_ab[a,i,b1,j1]*VSqjqj[b1,j1,b,j]
            T1aibj[a,i,b,j] *= 0.5
#
            PREPARE TAUP_ab[a,i,b,j] += T1aibj[a,i,b,j]
#
         ENDDO j
         ENDDO b
#
      ENDPARDO a, i, b1, j1
#
      server_barrier 
#
# Contribution to T2new_aa 
# ------------------------ 
#
      PARDO a, i, b, j
#
            REQUEST               TAUP_ab[a,i,b,j]    
#
            DO a1 
            DO i1 
#
               REQUEST               T2old_ab[a1,i1,b,j] 
#
               R1aiai[a1,i1,a,i]  =  T2old_ab[a1,i1,b,j]*TAUP_ab[a,i,b,j] 
#
               R2aiai[a1,i,a,i1]            =  R1aiai[a1,i1,a,i] 
               R2aiai[a1,i,a,i1]           *= -1.0  
               R3aiai[a,i1,a1,i]            =  R1aiai[a1,i1,a,i] 
               R3aiai[a,i1,a1,i]           *= -1.0  
               R4aiai[a,i,a1,i1]            =  R1aiai[a1,i1,a,i] 
#
               PREPARE T2new_aa[a1,i1,a,i] += R1aiai[a1,i1,a,i] 
               PREPARE T2new_aa[a1,i,a,i1] += R2aiai[a1,i,a,i1] 
               PREPARE T2new_aa[a,i1,a1,i] += R3aiai[a,i1,a1,i] 
               PREPARE T2new_aa[a,i,a1,i1] += R4aiai[a,i,a1,i1] 
            ENDDO i1 
            ENDDO a1 
#
      ENDPARDO a, i, b, j
#
# Contribution to T2new_ab 
# ------------------------ 
#
      PARDO a, i, b, j  
#
            REQUEST              TAUP_ab[a,i,b,j]      
#
            DO j1 
            DO b1
#
               REQUEST              T2old_bb[b1,j1,b,j] 
#
               R1aibj[a,i,b1,j1]  = T2old_bb[b1,j1,b,j]*TAUP_ab[a,i,b,j]  
               PREPARE T2new_ab[a,i,b1,j1] += R1aibj[a,i,b1,j1] 
            ENDDO b1
            ENDDO j1 
#
      ENDPARDO a, i, b, j  
#
      ENDPROC WMEBJBA  
#     ---------------
#
# Compute contributions coming from -t^a_m t^e_i (V^{mb}_{ej)-V^{mb}_{je}) 
#
      PROC T2AAS2 
#     ----------- 
#
      PARDO a2, i2 
#
            DO i 
#
#              allocate local arrays used in the final contractions 
#              ---------------------------------------------------- 
               allocate L1iiai[i,*,a2,i2] 
               allocate L2iiai[i2,*,a2,i] 
#
               IF i < i2 
#
#                 form local arrays 
#                 ----------------- 
                  DO i1 
#
                     L1iiai[i,i1,a2,i2] = 0.0 
                     L2iiai[i2,i1,a2,i] = 0.0 
#
                     DO a1 
#
                        REQUEST Viaai[i1,a1,a2,i2] 
                        REQUEST Vaaii[a2,a1,i1,i2] 
                        REQUEST Viaai[i1,a1,a2,i]    
                        REQUEST Vaaii[a2,a1,i1,i]    
                        GET     t1a_old[a1,i2] 
                        GET     t1a_old[a1,i] 
#
                        Tpppp[a1,i1,a2,i2]  = Viaai[i1,a1,a2,i2]
                        T1pppp[a1,i1,a2,i2] = Vaaii[a2,a1,i1,i2] 
                        Tpppp[a1,i1,a2,i2] -= T1pppp[a1,i1,a2,i2] 
#
                        T1iiai[i,i1,a2,i2]  = Tpppp[a1,i1,a2,i2]*t1a_old[a1,i]   
                        L1iiai[i,i1,a2,i2] -= T1iiai[i,i1,a2,i2]
#
                        Tpppp[a1,i1,a2,i]   = Viaai[i1,a1,a2,i]
                        T1pppp[a1,i1,a2,i]  = Vaaii[a2,a1,i1,i] 
                        Tpppp[a1,i1,a2,i]  -= T1pppp[a1,i1,a2,i]  
#
                        T1iiai[i2,i1,a2,i]  = Tpppp[a1,i1,a2,i]*t1a_old[a1,i2]   
                        L2iiai[i2,i1,a2,i] += T1iiai[i2,i1,a2,i]
#
                     ENDDO a1 
#
                  ENDDO i1 
#
#                 Compute contribution to amplitude 
#                 --------------------------------- 
                  DO a 
#
                     Taiai[a,i,a2,i2] = 0.0 
#
                     DO i1  
#
                        GET t1a_old[a,i1] 
                        Tiiai[i,i1,a2,i2]  = L2iiai[i2,i1,a2,i] 
                        Tiiai[i,i1,a2,i2] += L1iiai[i,i1,a2,i2] 
                        T1aiai[a,i,a2,i2]  = Tiiai[i,i1,a2,i2]*t1a_old[a,i1] 
                        Taiai[a,i,a2,i2]  += T1aiai[a,i,a2,i2]  
#
                     ENDDO i1  
#
                     T1aiai[a2,i2,a,i]            = Taiai[a,i,a2,i2] 
#                    PREPARE T2new_aa(a,i,a2,i2) += Taiai(a,i,a2,i2) 
#                    PREPARE T2new_aa(a2,i2,a,i) += T1aiai(a2,i2,a,i)  
#
                  ENDDO a 
#
               ENDIF # i < i2             
#
#              IF i == i2 
#
#                 form local arrays 
#                 ----------------- 
                  DO i1 
#
                     L1iiai[i,i1,a2,i2] = 0.0 
                     L2iiai[i2,i1,a2,i] = 0.0 
#
                     DO a1 
#
                        REQUEST Viaai[i1,a1,a2,i2]  
                        REQUEST Vaaii[a2,a1,i1,i2]   
                        REQUEST Viaai[i1,a1,a2,i]   
                        REQUEST Vaaii[a2,a1,i1,i]    
                        GET     t1a_old[a1,i2] 
                        GET     t1a_old[a1,i] 
#
                        Tpppp[a1,i1,a2,i2]  = Viaai[i1,a1,a2,i2]
                        T1pppp[a1,i1,a2,i2] = Vaaii[a2,a1,i1,i2] 
                        Tpppp[a1,i1,a2,i2] -= T1pppp[a1,i1,a2,i2] 
#
                        T1iiai[i,i1,a2,i2]  = Tpppp[a1,i1,a2,i2]*t1a_old[a1,i]   
                        L1iiai[i,i1,a2,i2] -= T1iiai[i,i1,a2,i2]
#
                        Tpppp[a1,i1,a2,i]   = Viaai[i1,a1,a2,i]
                        T1pppp[a1,i1,a2,i]  = Vaaii[a2,a1,i1,i] 
                        Tpppp[a1,i1,a2,i]  -= T1pppp[a1,i1,a2,i]  
#
                        T1iiai[i2,i1,a2,i]  = Tpppp[a1,i1,a2,i]*t1a_old[a1,i2]   
                        L2iiai[i2,i1,a2,i] += T1iiai[i2,i1,a2,i]
#
                     ENDDO a1 
#
                  ENDDO i1 
#
#                 Compute contribution to amplitude 
#                 --------------------------------- 
                  DO a 
#
                     Taiai[a,i,a2,i2] = 0.0 
#
                     DO i1  
#
                        GET t1a_old[a,i1] 
                        Tiiai[i,i1,a2,i2]  = L2iiai[i2,i1,a2,i] 
                        Tiiai[i,i1,a2,i2] += L1iiai[i,i1,a2,i2] 
                        T1aiai[a,i,a2,i2]  = Tiiai[i,i1,a2,i2]*t1a_old[a,i1] 
                        Taiai[a,i,a2,i2]  += T1aiai[a,i,a2,i2]  
#
                     ENDDO i1  
#
                     PREPARE T2new_aa[a,i,a2,i2] += Taiai[a,i,a2,i2] 
#
                  ENDDO a 
#
#              ENDIF # i == i2             
#
               deallocate L1iiai[i,*,a2,i2] 
               deallocate L2iiai[i2,*,a2,i] 
#
            ENDDO i 
#
      ENDPARDO a2, i2 
#
      PARDO a, i2 
#
            DO i 
#
#              allocate local arrays used in the final contractions 
#              ---------------------------------------------------- 
               allocate L3iiai[i,*,a,i2] 
               allocate L4iiai[i2,*,a,i] 
#
               IF i < i2 
#
#                 Compute local arrays 
#                 -------------------- 
                  DO i1 
#
                     L3iiai[i,i1,a,i2] = 0.0 
                     L4iiai[i2,i1,a,i] = 0.0 
#
                     DO a1 
#
                        REQUEST Viaai[i1,a1,a,i2] 
                        REQUEST Vaaii[a,a1,i1,i2]   
                        GET t1a_old[a1,i] 
#
                        Tpppp[a1,i1,a,i2]  = Viaai[i1,a1,a,i2]
                        T1pppp[a1,i1,a,i2] = Vaaii[a,a1,i1,i2] 
                        Tpppp[a1,i1,a,i2] -= T1pppp[a1,i1,a,i2] 
                        T1iiai[i,i1,a,i2] = Tpppp[a1,i1,a,i2]*t1a_old[a1,i]   
                        L3iiai[i,i1,a,i2] += T1iiai[i,i1,a,i2]
#
                        REQUEST Viaai[i1,a1,a,i] 
                        REQUEST Vaaii[a,a1,i1,i] 
                        Tpppp[a1,i1,a,i]  = Viaai[i1,a1,a,i]
                        T1pppp[a1,i1,a,i] = Vaaii[a,a1,i1,i] 
                        Tpppp[a1,i1,a,i] -= T1pppp[a1,i1,a,i] 
#
                        GET t1a_old[a1,i2] 
                        T1iiai[i2,i1,a,i]  = Tpppp[a1,i1,a,i]*t1a_old[a1,i2]   
                        L4iiai[i2,i1,a,i] -= T1iiai[i2,i1,a,i]
#
                     ENDDO a1 
#
                  ENDDO i1 
#
#                 Compute contribution to amplitude 
#                 --------------------------------- 
#
                  DO a2 
#
                     Taiai[a,i,a2,i2] = 0.0 
#
                     DO i1 
#
                        GET t1a_old[a2,i1] 
                        Tiiai[i,i1,a,i2]  = L4iiai[i2,i1,a,i] 
                        Tiiai[i,i1,a,i2] += L3iiai[i,i1,a,i2]  
#
                        T1aiai[a,i,a2,i2] = L3iiai[i,i1,a,i2]*t1a_old[a2,i1] 
                        Taiai[a,i,a2,i2] += T1aiai[a,i,a2,i2]  
#
                     ENDDO i1 
#
                     T1aiai[a2,i2,a,i]            = Taiai[a,i,a2,i2] 
#                    PREPARE T2new_aa(a,i,a2,i2) += Taiai(a,i,a2,i2) 
#                    PREPARE T2new_aa(a2,i2,a,i) += T1aiai(a2,i2,a,i) 
#
                  ENDDO a2 
#
               ENDIF # i < i2 
#
#              IF i == i2 
#
                  DO i1 
#
                     L3iiai[i,i1,a,i2] = 0.0 
#
                     DO a1 
#
                        REQUEST Viaai[i1,a1,a,i2] 
                        REQUEST Vaaii[a,a1,i1,i2] 
                        GET t1a_old[a1,i] 
#
                        Tpppp[a1,i1,a,i2]  = Viaai[i1,a1,a,i2]
                        T1pppp[a1,i1,a,i2] = Vaaii[a,a1,i1,i2] 
                        Tpppp[a1,i1,a,i2] -= T1pppp[a1,i1,a,i2] 
                        T1iiai[i,i1,a,i2] = Tpppp[a1,i1,a,i2]*t1a_old[a1,i]   
                        L3iiai[i,i1,a,i2] += T1iiai[i,i1,a,i2]
#
                     ENDDO a1 
#
                  ENDDO i1 
#
                  DO a2 
#
                     Taiai[a,i,a2,i2] = 0.0 
#
                     DO i1 
#
                        GET t1a_old[a2,i1] 
                        T1aiai[a,i,a2,i2] = L3iiai[i,i1,a,i2]*t1a_old[a2,i1] 
                        Taiai[a,i,a2,i2] += T1aiai[a,i,a2,i2]  
#
                     ENDDO i1 
#
                     PREPARE T2new_aa[a,i,a2,i2] += Taiai[a,i,a2,i2] 
#
                 ENDDO a2 
#
#              ENDIF # i == i2 
#
#              IF i == i2 
#
                  DO i1 
#
                     L4iiai[i2,i1,a,i] = 0.0 
#
                     DO a1 
#
                        REQUEST Viaai[i1,a1,a,i]   
                        REQUEST Vaaii[a,a1,i1,i]   
                        Tpppp[a1,i1,a,i]  = Viaai[i1,a1,a,i]
                        T1pppp[a1,i1,a,i] = Vaaii[a,a1,i1,i] 
                        Tpppp[a1,i1,a,i] -= T1pppp[a1,i1,a,i] 
#
                        GET t1a_old[a1,i2] 
                        T1iiai[i2,i1,a,i] = Tpppp[a1,i1,a,i]*t1a_old[a1,i2]   
                        L4iiai[i2,i1,a,i] += T1iiai[i2,i1,a,i]
#
                     ENDDO a1 
#
                  ENDDO i1 
#
                  DO a2 
#
                     Taiai[a,i,a2,i2] = 0.0 
#
                     DO i1 
#
                        GET t1a_old[a2,i1] 
                        T1aiai[a,i,a2,i2] = L4iiai[i2,i1,a,i]*t1a_old[a2,i1] 
                        Taiai[a,i,a2,i2] -= T1aiai[a,i,a2,i2]  
#
                     ENDDO i1 
#
                     PREPARE T2new_aa[a,i,a2,i2] += Taiai[a,i,a2,i2] 
#
                  ENDDO a2 
#
#              ENDIF # i == i2 
#
               deallocate L3iiai[i,*,a,i2] 
               deallocate L4iiai[i2,*,a,i] 
#
            ENDDO i 
#
      ENDPARDO a, i2 
#
      ENDPROC T2AAS2 
#     -------------- 
#
      PROC T2BBS2 
#     ----------- 
#
      PARDO j1, b2, j2 
#
            DO j 
#
               IF j < j2 
#
                  Tjjbj[j,j1,b2,j2] = 0.0 
#
                  DO b1 
#
                     REQUEST Vjbbj[j1,b1,b2,j2] 
                     REQUEST Vbbjj[b2,b1,j1,j2] 
                     GET t1b_old[b1,j] 
                     Tqqqq[b1,j1,b2,j2]  = Vjbbj[j1,b1,b2,j2]
                     T1qqqq[b1,j1,b2,j2] = Vbbjj[b2,b1,j1,j2] 
                     Tqqqq[b1,j1,b2,j2] -= T1qqqq[b1,j1,b2,j2]  
#
                     T1jjbj[j,j1,b2,j2] = Tqqqq[b1,j1,b2,j2]*t1b_old[b1,j]   
                     Tjjbj[j,j1,b2,j2] -= T1jjbj[j,j1,b2,j2]
#
                  ENDDO b1 
#
                  DO b 
#
                     GET t1b_old[b,j1] 
                     Tbjbj[b,j,b2,j2]  = Tjjbj[j,j1,b2,j2]*t1b_old[b,j1] 
                     T1bjbj[b2,j2,b,j] = Tbjbj[b,j,b2,j2]  
                     PREPARE T2new_bb[b,j,b2,j2] += Tbjbj[b,j,b2,j2] 
                     PREPARE T2new_bb[b2,j2,b,j] += T1bjbj[b2,j2,b,j] 
#
                  ENDDO b 
#
               ENDIF # j < j2 
#
               IF j == j2 
#
                  Tjjbj[j,j1,b2,j2] = 0.0 
#
                  DO b1 
#
                     REQUEST Vjbbj[j1,b1,b2,j2] 
                     REQUEST Vbbjj[b2,b1,j1,j2] 
                     GET t1b_old[b1,j] 
                     Tqqqq[b1,j1,b2,j2]  = Vjbbj[j1,b1,b2,j2]
                     T1qqqq[b1,j1,b2,j2] = Vbbjj[b2,b1,j1,j2] 
                     Tqqqq[b1,j1,b2,j2] -= T1qqqq[b1,j1,b2,j2]  
#
                     T1jjbj[j,j1,b2,j2] = Tqqqq[b1,j1,b2,j2]*t1b_old[b1,j]   
                     Tjjbj[j,j1,b2,j2] -= T1jjbj[j,j1,b2,j2]
#
                  ENDDO b1 
#
                  DO b 
#
                     GET t1b_old[b,j1] 
                     Tbjbj[b,j,b2,j2]  = Tjjbj[j,j1,b2,j2]*t1b_old[b,j1] 
                     PREPARE T2new_bb[b,j,b2,j2] += Tbjbj[b,j,b2,j2] 
#
                  ENDDO b 
#
               ENDIF # j == j2 
#
               IF j < j2 
#
                  Tjjbj[j2,j1,b2,j] = 0.0 
#
                  DO b1 
#
                     REQUEST Vjbbj[j1,b1,b2,j] 
                     REQUEST Vbbjj[b2,b1,j1,j]   
                     GET t1b_old[b1,j2] 
                     Tqqqq[b2,j1,b1,j]  = Vjbbj[j1,b1,b2,j]
                     T1qqqq[b2,j1,b1,j] = Vbbjj[b2,b1,j1,j] 
                     Tqqqq[b2,j1,b1,j] -= T1qqqq[b2,j1,b1,j]  
#
                     T1jjbj[j2,j1,b2,j] = Tqqqq[b2,j1,b1,j]*t1b_old[b1,j2]   
                     Tjjbj[j2,j1,b2,j] += T1jjbj[j2,j1,b2,j]
#
                  ENDDO b1 
#
                  DO b 
#
                     GET t1b_old[b,j1] 
                     Tbjbj[b,j,b2,j2]  = Tjjbj[j2,j1,b2,j]*t1b_old[b,j1] 
                     T1bjbj[b2,j2,b,j] = Tbjbj[b,j,b2,j2]  
                     PREPARE T2new_bb[b,j,b2,j2] += Tbjbj[b,j,b2,j2] 
                     PREPARE T2new_bb[b2,j2,b,j] += T1bjbj[b2,j2,b,j] 
#
                  ENDDO b 
#
               ENDIF # j < j2 
#
               IF j == j2 
#
                  Tjjbj[j2,j1,b2,j] = 0.0 
#
                  DO b1 
#
                     REQUEST Vjbbj[j1,b1,b2,j] 
                     REQUEST Vbbjj[b2,b1,j1,j] 
                     GET t1b_old[b1,j2] 
                     Tqqqq[b2,j1,b1,j]  = Vjbbj[j1,b1,b2,j]
                     T1qqqq[b2,j1,b1,j] = Vbbjj[b2,b1,j1,j] 
                     Tqqqq[b2,j1,b1,j] -= T1qqqq[b2,j1,b1,j]  
#
                     T1jjbj[j2,j1,b2,j] = Tqqqq[b2,j1,b1,j]*t1b_old[b1,j2]   
                     Tjjbj[j2,j1,b2,j] += T1jjbj[j2,j1,b2,j]
#
                  ENDDO b1 
#
                  DO b 
#
                     GET t1b_old[b,j1] 
                     Tbjbj[b,j,b2,j2] = Tjjbj[j2,j1,b2,j]*t1b_old[b,j1] 
                     PREPARE T2new_bb[b,j,b2,j2] += Tbjbj[b,j,b2,j2] 
#
                  ENDDO b 
#
               ENDIF # j == j2 
#
           ENDDO j 
#
      ENDPARDO j1, b2, j2 
#
      PARDO j1, b, j2 
#
            DO j 
#
               IF j < j2 
#
                  Tjjbj[j,j1,b,j2] = 0.0 
#
                  DO b1 
#
                     REQUEST Vjbbj[j1,b1,b,j2] 
                     REQUEST Vbbjj[b,b1,j1,j2] 
                     GET t1b_old[b1,j] 
#
                     Tqqqq[b1,b,j1,j2]  = Vjbbj[j1,b1,b,j2]
                     T1qqqq[b1,b,j1,j2] = Vbbjj[b,b1,j1,j2] 
                     Tqqqq[b1,b,j1,j2] -= T1qqqq[b1,b,j1,j2]  
#
                     T1jjbj[j,j1,b,j2] = Tqqqq[b1,b,j1,j2]*t1b_old[b1,j]   
                     Tjjbj[j,j1,b,j2] += T1jjbj[j,j1,b,j2]
#
                  ENDDO b1 
#
                  DO b2 
#
                     GET t1b_old[b2,j1] 
                     Tbjbj[b,j,b2,j2]  = Tjjbj[j,j1,b,j2]*t1b_old[b2,j1] 
                     T1bjbj[b2,j2,b,j] = Tbjbj[b,j,b2,j2]  
                     PREPARE T2new_bb[b,j,b2,j2] += Tbjbj[b,j,b2,j2] 
                     PREPARE T2new_bb[b2,j2,b,j] += T1bjbj[b2,j2,b,j] 
#
                  ENDDO b2 
#
               ENDIF # j < j2 
#
               IF j == j2 
#
                  Tjjbj[j,j1,b,j2] = 0.0 
#
                  DO b1 
#
                     REQUEST Vjbbj[j1,b1,b,j2] 
                     REQUEST Vbbjj[b,b1,j1,j2] 
                     GET t1b_old[b1,j] 
                     Tqqqq[b1,b,j1,j2]  = Vjbbj[j1,b1,b,j2]
                     T1qqqq[b1,b,j1,j2] = Vbbjj[b,b1,j1,j2] 
                     Tqqqq[b1,b,j1,j2] -= T1qqqq[b1,b,j1,j2]  
#
                     T1jjbj[j,j1,b,j2] = Tqqqq[b1,b,j1,j2]*t1b_old[b1,j]   
                     Tjjbj[j,j1,b,j2] += T1jjbj[j,j1,b,j2]
#
                  ENDDO b1 
#
                  DO b2 
#
                     GET t1b_old[b2,j1] 
                     Tbjbj[b,j,b2,j2]  = Tjjbj[j,j1,b,j2]*t1b_old[b2,j1] 
                     PREPARE T2new_bb[b,j,b2,j2] += Tbjbj[b,j,b2,j2] 
#
                  ENDDO b2 
#
               ENDIF # j == j2 
#
               IF j < j2 
#
                  Tjjbj[j2,j1,b,j] = 0.0 
#
                  DO b1 
#
                     REQUEST Vjbbj[j1,b1,b,j]   
                     REQUEST Vbbjj[b,b1,j1,j]   
                     GET t1b_old[b1,j2] 
#
                     Tqqqq[b1,j1,b,j]  = Vjbbj[j1,b1,b,j]
                     T1qqqq[b1,j1,b,j] = Vbbjj[b,b1,j1,j] 
                     Tqqqq[b1,j1,b,j] -= T1qqqq[b1,j1,b,j] 
#
                     T1jjbj[j2,j1,b,j] = Tqqqq[b1,j1,b,j]*t1b_old[b1,j2]   
                     Tjjbj[j2,j1,b,j] += T1jjbj[j2,j1,b,j]
#
                  ENDDO b1 
#
                  DO b2 
#
                     GET t1b_old[b2,j1] 
                     Tbjbj[b,j,b2,j2] = Tjjbj[j2,j1,b,j]*t1b_old[b2,j1] 
                     Tbjbj[b,j,b2,j2] *= -1.0 
                     T1bjbj[b2,j2,b,j] = Tbjbj[b,j,b2,j2]  
                     PREPARE T2new_bb[b,j,b2,j2] += Tbjbj[b,j,b2,j2] 
                     PREPARE T2new_bb[b2,j2,b,j] += T1bjbj[b2,j2,b,j] 
#
                  ENDDO b2 
#
               ENDIF # j < j2 
#
               IF j == j2 
#
                  Tjjbj[j2,j1,b,j] = 0.0 
#
                  DO b1 
#
                     REQUEST Vjbbj[j1,b1,b,j]   
                     REQUEST Vbbjj[b,b1,j1,j]   
                     GET t1b_old[b1,j2] 
#
                     Tqqqq[b1,j1,b,j]  = Vjbbj[j1,b1,b,j]
                     T1qqqq[b1,j1,b,j] = Vbbjj[b,b1,j1,j] 
                     Tqqqq[b1,j1,b,j] -= T1qqqq[b1,j1,b,j] 
#
                     T1jjbj[j2,j1,b,j] = Tqqqq[b1,j1,b,j]*t1b_old[b1,j2]   
                     Tjjbj[j2,j1,b,j] += T1jjbj[j2,j1,b,j]
#
                  ENDDO b1 
#
                  DO b2 
#
                     GET t1b_old[b2,j1] 
                     Tbjbj[b,j,b2,j2] = Tjjbj[j2,j1,b,j]*t1b_old[b2,j1] 
                     Tbjbj[b,j,b2,j2] *= -1.0 
                     PREPARE T2new_bb[b,j,b2,j2] += Tbjbj[b,j,b2,j2] 
#
                  ENDDO b2 
#
               ENDIF # j == j2 
#
            ENDDO j 
#
      ENDPARDO j1, b, j2 
#
      ENDPROC T2BBS2 
#     -------------- 
#
      PROC T2ABS2 
#     ----------- 
#
      PARDO i1, i, b, j 
#
           Tiibj[i1,i,b,j] = 0.0 
#
           DO a1 
# 
              REQUEST Viabj[i1,a1,b,j]   
              GET t1a_old[a1,i] 
#
              T1iibj[i1,i,b,j] = Viabj[i1,a1,b,j]*t1a_old[a1,i] 
              Tiibj[i1,i,b,j] += T1iibj[i1,i,b,j] 
#
           ENDDO a1  
#
           DO b1 
#
              REQUEST Vbbii[b,b1,i1,i]   
              GET t1b_old[b1,j] 
#
              T1iibj[i1,i,b,j] = Vbbii[b,b1,i1,i]*t1b_old[b1,j]  
              Tiibj[i1,i,b,j] += T1iibj[i1,i,b,j] 
#
          ENDDO b1  
#
          DO a 
#
             GET t1a_old[a,i1] 
             Taibj[a,i,b,j]  = Tiibj[i1,i,b,j]*t1a_old[a,i1] 
             Taibj[a,i,b,j] *= -1.0 
             PREPARE T2new_ab[a,i,b,j] += Taibj[a,i,b,j] 
#
          ENDDO a 
#
      ENDPARDO i1, i, b, j 
#
      PARDO j1, i, a, j 
#
            Tjjai[j1,j,a,i] = 0.0 
#
            DO a1 
#
               REQUEST Vaajj[a,a1,j1,j] 
               GET t1a_old[a1,i] 
#
               T1jjai[j1,j,a,i] = Vaajj[a,a1,j1,j]*t1a_old[a1,i] 
               Tjjai[j1,j,a,i] += T1jjai[j1,j,a,i]
#
            ENDDO a1 
#
            DO b1 
# 
               REQUEST Viabj[i,a,b1,j1] 
               GET t1b_old[b1,j] 
#
               T1jjai[j1,j,a,i] = Viabj[i,a,b1,j1]*t1b_old[b1,j] 
               Tjjai[j1,j,a,i] += T1jjai[j1,j,a,i] 
#
            ENDDO b1  
#
            DO b 
#
               GET t1b_old[b,j1] 
               Taibj[a,i,b,j]  = Tjjai[j1,j,a,i]*t1b_old[b,j1] 
               Taibj[a,i,b,j] *= -1.0 
               PREPARE T2new_ab[a,i,b,j] += Taibj[a,i,b,j] 
#
            ENDDO b 
#
      ENDPARDO j1, i, a, j 
#
      ENDPROC T2ABS2 
#     -------------- 
#
# Compute contributions from 'Wmjbe'. 
#
#
      PROC WMJBEab
#     -------------
#
      PARDO b, i, b1, i1
#
            REQUEST Vbbii[b,b1,i1,i]
            Tiiqq[i1,i,b,b1] = 0.
#
            DO j1
#
               REQUEST Vpiqj[i,i1,b1,j1]
               GET t1b_old[b,j1]
#
               tbj[b,j1]         = t1b_old[b,j1]
               T1iiqq[i1,i,b,b1] = Vpiqj[i,i1,b1,j1]*tbj[b,j1]
               Tiiqq[i1,i,b,b1] -= T1iiqq[i1,i,b,b1]
#
            ENDDO j1
#
            T1iiqq[i1,i,b,b1] = Vbbii[b,b1,i1,i]
            Tiiqq[i1,i,b,b1] += T1iiqq[i1,i,b,b1]
            PREPARE Wiibb[i1,i,b,b1] = Tiiqq[i1,i,b,b1]
#
      ENDPARDO b, i, b1, i1
      server_barrier

      PARDO a1, b, i1, b1
         REQUEST Vbbai[b1,b,a1,i1] 
         DO i
            GET t1a_old[a1,i]
            T1iiqq[i1,i,b,b1] = Vbbai[b1,b,a1,i1]*t1a_old[a1,i]
            PREPARE Wiibb[i1,i,b,b1]  += T1iiqq[i1,i,b,b1]
         ENDDO i
      ENDPARDO a1, b, i1, b1

      PARDO i, b, a1, j1
         REQUEST T2old_ab[a1,i,b,j1] 
         GET t1a_old[a1,i]
         GET t1b_old[b,j1]

         Taibj[a1,i,b,j1]   = t1a_old[a1,i]^t1b_old[b,j1]
#
         DO i1
         DO b1
#
            REQUEST Vpiqj[a1,i1,b1,j1] 
            Tiiqq[i1,i,b,b1] = 0.
#
            T1aibj[a1,i,b,j1]  = 0.5*T2old_ab[a1,i,b,j1]
            T1aibj[a1,i,b,j1] += Taibj[a1,i,b,j1]
#
            T1iiqq[i1,i,b,b1] = T1aibj[a1,i,b,j1]*Vpiqj[a1,i1,b1,j1]
            Tiiqq[i1,i,b,b1] -= T1iiqq[i1,i,b,b1]
#
            PREPARE Wiibb[i1,i,b,b1] += Tiiqq[i1,i,b,b1]
         ENDDO b1
         ENDDO i1
#
      ENDPARDO i, b, a1, j1
      server_barrier

#  Calculate contribution to the amplitudes
#  ----------------------------------------
#
      PARDO a, j, i1, b1
#
            REQUEST            T2old_ab[a,i1,b1,j] 
#
            DO i
            DO b
#
               REQUEST            Wiibb[i1,i,b,b1]   
#
               Taibj[a,i,b,j] = 0.
               T1aibj[a,i,b,j]  = T2old_ab[a,i1,b1,j]*Wiibb[i1,i,b,b1]
               Taibj[a,i,b,j]  -= T1aibj[a,i,b,j]
#
               PREPARE T2new_ab[a,i,b,j] += Taibj[a,i,b,j]
            ENDDO b
            ENDDO i
#
      ENDPARDO a, j, i1, b1
#
      ENDPROC WMJBEab
#     ---------------
#
      PROC WMJBEba
#     -------------
#
      PARDO a, j, a1, j1
#
            REQUEST Vaajj[a,a1,j1,j] 
            Tjjpp[j1,j,a,a1] = 0.
#
            DO i1
#
               REQUEST Vpiqj[a1,i1,j,j1] 
               GET t1a_old[a,i1]
               T1jjpp[j1,j,a,a1] = Vpiqj[a1,i1,j,j1]*t1a_old[a,i1]
               Tjjpp[j1,j,a,a1] -= T1jjpp[j1,j,a,a1]
            ENDDO i1
#
            T1jjpp[j1,j,a,a1] = Vaajj[a,a1,j1,j]
            Tjjpp[j1,j,a,a1] += T1jjpp[j1,j,a,a1]
            PREPARE Wjjaa[j1,j,a,a1] = Tjjpp[j1,j,a,a1]
#
      ENDPARDO a, j, a1, j1
      server_barrier

      PARDO a1, a, b1, j1
         REQUEST Vaabj[a1,a,b1,j1] 

         DO j
            GET t1b_old[b1,j]
            T1jjpp[j1,j,a,a1] = Vaabj[a1,a,b1,j1]*t1b_old[b1,j]
            PREPARE Wjjaa[j1,j,a,a1] += T1jjpp[j1,j,a,a1]
         ENDDO j
      ENDPARDO a1, a, b1, j1

      PARDO a, j, i1, b1
            REQUEST T2old_ab[a,i1,b1,j]
#
            GET t1a_old[a,i1]
            GET t1b_old[b1,j]
#
            Taibj[a,i1,b1,j]   = t1b_old[b1,j]^t1a_old[a,i1]
            T1aibj[a,i1,b1,j]  = 0.5*T2old_ab[a,i1,b1,j]
            T1aibj[a,i1,b1,j] += Taibj[a,i1,b1,j]
#
            DO j1
            DO a1
#
               REQUEST Vpiqj[a1,i1,b1,j1] 
#
               Tjjpp[j1,j,a,a1]  = 0.
               T1jjpp[j1,j,a,a1] = T1aibj[a,i1,b1,j]*Vpiqj[a1,i1,b1,j1]
               Tjjpp[j1,j,a,a1] -= T1jjpp[j1,j,a,a1]
#
               PREPARE Wjjaa[j1,j,a,a1] += Tjjpp[j1,j,a,a1]
            ENDDO a1
            ENDDO j1
#
      ENDPARDO a, j, i1, b1
      server_barrier

#  Calculate contribution to the amplitudes
#  ----------------------------------------
#
      PARDO i, b, a1, j1
#
            REQUEST           T2old_ab[a1,i,b,j1] 
#
            DO a
            DO j
#
               REQUEST           Wjjaa[j1,j,a,a1]   
#
               Taibj[a,i,b,j] = 0.
               T1aibj[a,i,b,j] = Wjjaa[j1,j,a,a1]*T2old_ab[a1,i,b,j1]
               Taibj[a,i,b,j] -= T1aibj[a,i,b,j]
#
               PREPARE T2new_ab[a,i,b,j] += Taibj[a,i,b,j]
            ENDDO j
            ENDDO a
#
      ENDPARDO i, b, a1, j1
#
      ENDPROC WMJBEba
#     ---------------
#
      PROC WMEBJ 
#     ----------
# 
           CALL WMEBJAA
           CALL WMEBJBB
           CALL WMEBJAB
           CALL WMEBJBA
           CALL WMJBEab
           CALL WMJBEba 
           CALL T2AAS2
           CALL T2BBS2
           CALL T2ABS2
#
      ENDPROC WMEBJ 
#    --------------
#
     PROC ENERGY_NEW 
#    ---------------
#
#bgn_debug
#     esuma=0.0
#     esumb=0.0
#     esumab=0.0
#     ecorraa = 0.0
#     ecorrbb = 0.0
#     ecorrab = 0.0
#     pardo a, a1, i, i1 
#     request T2old_aa[a,i,a1,i1]
#     etemp =  T2old_aa[a,i,a1,i1] * T2old_aa[a,i,a1,i1]
#     esuma += etemp
#     endpardo a, a1, i, i1 
#     PARDO b, b1, j, j1 
#     request T2old_bb[b,j,b1,j1]
#     etemp = T2old_bb[b,j,b1,j1] * T2old_bb[b,j,b1,j1]
#     esumb += etemp
#     ENDPARDO b, b1, j, j1 
#     PARDO a, i, b, j
#     request T2old_ab[a,i,b,j] 
#     etemp = T2old_ab[a,i,b,j] * T2old_ab[a,i,b,j]
#     esumab += etemp
#     ENDPARDO a, i, b, j
#     sip_barrier 
#     collective ecorraa += esuma
#     collective ecorrbb += esumb 
#     collective ecorrab += esumab
#     sip_barrier 
#     print ecorraa
#     print ecorrbb
#     print ecorrab
#     sip_barrier 
#end_debug

     esuma   = 0.0 
     ecorraa = 0.0 
     PARDO a, a1, i, i1 
#
           REQUEST VSpipi[a,i,a1,i1] 
           REQUEST T2old_aa[a,i,a1,i1] 
#
           GET t1a_old[a1,i1] 
           GET t1a_old[a1,i] 
           GET t1a_old[a,i1] 
           GET t1a_old[a,i] 
#
           tai[a1,i1]         =          t1a_old[a1,i1] 
           T2aiai[a,i,a1,i1]  = t1a_old[a,i]^tai[a1,i1]
           tai[a,i1]          =           t1a_old[a,i1] 
           T3aiai[a,i,a1,i1]  = t1a_old[a1,i]^tai[a,i1]
           T2aiai[a,i,a1,i1] -= T3aiai[a,i,a1,i1]
           T2aiai[a,i,a1,i1] += T2old_aa[a,i,a1,i1]
#
           etemp = VSpipi[a,i,a1,i1]*T2aiai[a,i,a1,i1] 
           etemp = 0.25*etemp 
           esuma += etemp 
#
     ENDPARDO a, a1, i, i1  
#
     ecorrbb = 0.0 
     esumb   = 0.0 
     PARDO b, b1, j, j1 
#
           REQUEST VSqjqj[b,j,b1,j1] 
           REQUEST T2old_bb[b,j,b1,j1] 
#
           GET t1b_old[b1,j1] 
           GET t1b_old[b1,j] 
           GET t1b_old[b,j1] 
           GET t1b_old[b,j] 
#
           tbj[b1,j1]         =          t1b_old[b1,j1] 
           T2bjbj[b,j,b1,j1]  = t1b_old[b,j]^tbj[b1,j1]
           tbj[b,j1]          =           t1b_old[b,j1] 
           T3bjbj[b,j,b1,j1]  = t1b_old[b1,j]^tbj[b,j1]
           T2bjbj[b,j,b1,j1] -= T3bjbj[b,j,b1,j1]
           T2bjbj[b,j,b1,j1] += T2old_bb[b,j,b1,j1]
#
           etemp = VSqjqj[b,j,b1,j1]*T2bjbj[b,j,b1,j1] 
           etemp = 0.25*etemp 
           esumb += etemp 
#
     ENDPARDO b, b1, j, j1 

     ecorrab = 0.0 
     esumab  = 0.0 
     PARDO a, b, i, j 
#
           REQUEST Vpiqj[a,i,b,j]   
           REQUEST T2old_ab[a,i,b,j]   
           GET t1a_old[a,i] 
           GET t1b_old[b,j] 
#
           Taibj[a,i,b,j]  = t1a_old[a,i]^t1b_old[b,j] 
           Taibj[a,i,b,j] += T2old_ab[a,i,b,j]  
#
           etemp = Taibj[a,i,b,j]*Vpiqj[a,i,b,j] 
           esumab += etemp 
#
     ENDPARDO a, b, i, j 

     sip_barrier 
     collective ecorraa += esuma
     collective ecorrbb += esumb 
     collective ecorrab += esumab
     ecorrT  = ecorraa + ecorrbb
     ecorrT += ecorrab 
     sip_barrier 
#bgn_debug
#     Print "AAAA, BBBB, ABAB correlation energy contributions"
#     print ecorraa
#     print ecorrbb
#     print ecorrab
#     Print "The CCSD correlation energy"
#     print ecorrT
#end_debug 
#
     ENDPROC ENERGY_NEW 
#    ------------------
# 
     PROC T2NEW_ZERO
#    --------------- 
#
#     Zero out new 1-particle amplitude arrays 
#     ---------------------------------------- 
#
          PARDO a, i 
                tai[a,i] = 0.0 
                PUT t1a_new[a,i] = tai[a,i] 
          ENDPARDO a, i 
#
          PARDO b, j 
                tbj[b,j] = 0.0 
                PUT t1b_new[b,j] = tbj[b,j] 
          ENDPARDO b, j 

          pardo a,a1
             put Fae_a[a,a1] = 0.0
          endpardo a,a1
          pardo b,b1
             put Fae_b[b,b1] = 0.0
          endpardo b,b1
          pardo a,i
             put Fme_a[i,a] = 0.0
          endpardo a,i
          pardo b,j
             put Fme_b[j,b] = 0.0
          endpardo b,j
          pardo i,i1
             put Fmi_a[i,i1] = 0.0
          endpardo i,i1
          pardo j,j1
             put Fmi_b[j,j1] = 0.0
          endpardo j,j1
#
#     Zero out new 2-particle amplitude arrays 
#     ---------------------------------------- 
#
          PARDO a, a1, i, i1 
                Taiai[a,i,a1,i1] = 0.0
                PREPARE T2new_aa[a,i,a1,i1] = Taiai[a,i,a1,i1] 
          ENDPARDO a, a1, i, i1 
#
          PARDO b, b1, j, j1 
                Tbjbj[b,j,b1,j1] = 0.0
                PREPARE T2new_bb[b,j,b1,j1] = Tbjbj[b,j,b1,j1] 
          ENDPARDO b, b1, j, j1 
#
          PARDO a, b, i, j 
                Taibj[a,i,b,j] = 0.0
                PREPARE T2new_ab[a,i,b,j] = Taibj[a,i,b,j] 
          ENDPARDO a, b, i, j 
# 
     server_barrier 
     ENDPROC T2NEW_ZERO
#    ------------------

      PROC UPDATET2 
#     ------------- 
#
      PARDO a, a1, i, i1 
#
            REQUEST                    T2old_aa[a,i,a1,i1] 
            REQUEST                    T2new_aa[a,i,a1,i1] 
            Taiai[a,i,a1,i1]         = T2new_aa[a,i,a1,i1]
            T1aiai[a,i,a1,i1]        = T2old_aa[a,i,a1,i1]
            execute energy_denominator Taiai[a,i,a1,i1] fock_a fock_a AAAA
            t1aiai[a,i,a1,i1] -= taiai[a,i,a1,i1]
            t1aiai[a,i,a1,i1] *= -1.0
#
            if kiter < diis_order
               PREPARE eaiai[a,i,a1,i1,kiter] = T1aiai[a,i,a1,i1]
            endif 

            if kiter >= diis_order
               DO jdiis
                  if jdiis == diis_order
                     PREPARE eaiai[a,i,a1,i1,jdiis] = T1aiai[a,i,a1,i1]
                  endif 
               ENDDO jdiis
            endif 

      ENDPARDO a, a1, i, i1
#
      PARDO b, b1, j, j1
#
            REQUEST                    T2old_bb[b,j,b1,j1] 
            REQUEST                    T2new_bb[b,j,b1,j1] 
            Tbjbj[b,j,b1,j1]         = T2new_bb[b,j,b1,j1]
            T1bjbj[b,j,b1,j1]        = T2old_bb[b,j,b1,j1]
            execute energy_denominator Tbjbj[b,j,b1,j1] fock_b fock_b BBBB
            T1bjbj[b,j,b1,j1] -= tbjbj[b,j,b1,j1]
            T1bjbj[b,j,b1,j1] *= -1.0
#
            if kiter < diis_order
               PREPARE ebjbj[b,j,b1,j1,kiter] = T1bjbj[b,j,b1,j1]
            endif 

            if kiter >= diis_order
               DO jdiis
                  if jdiis == diis_order
                     PREPARE ebjbj[b,j,b1,j1,jdiis] = T1bjbj[b,j,b1,j1]
                  endif
               ENDDO jdiis 
            endif 
#
      ENDPARDO b, b1, j, j1
#
      PARDO b, a, j, i
#
            REQUEST                    T2old_ab[a,i,b,j]  
            REQUEST                    T2new_ab[a,i,b,j]  
            Taibj[a,i,b,j]           = T2new_ab[a,i,b,j]
            T1aibj[a,i,b,j]          = T2old_ab[a,i,b,j]
            execute energy_denominator Taibj[a,i,b,j] fock_a fock_b ABAB
            T1aibj[a,i,b,j] -= Taibj[a,i,b,j]
            T1aibj[a,i,b,j] *= -1.0
#
            if kiter < diis_order
               PREPARE eaibj[a,i,b,j,kiter] = T1aibj[a,i,b,j]
            endif 

            if kiter >= diis_order
               DO jdiis
                  if jdiis == diis_order
                     PREPARE eaibj[a,i,b,j,jdiis] = T1aibj[a,i,b,j]
                  endif
               ENDDO jdiis 
            endif 
      ENDPARDO b, a, j, i
      server_barrier 
#
      PARDO a, a1, i, i1
#
            REQUEST                    T2new_aa[a,i,a1,i1]  
            Taiai[a,i,a1,i1]         = T2new_aa[a,i,a1,i1]
            execute energy_denominator Taiai[a,i,a1,i1] fock_a fock_a AAAA
            PREPARE T2old_aa[a,i,a1,i1]  = Taiai[a,i,a1,i1]
      ENDPARDO a, a1, i, i1
#
      PARDO b, b1, j, j1
#
            REQUEST                    T2new_bb[b,j,b1,j1] 
            Tbjbj[b,j,b1,j1]         = T2new_bb[b,j,b1,j1]
            execute energy_denominator Tbjbj[b,j,b1,j1] fock_b fock_b BBBB
            PREPARE T2old_bb[b,j,b1,j1]  = Tbjbj[b,j,b1,j1]
#
      ENDPARDO b, b1, j, j1
#
      PARDO b, a, j, i
#
            REQUEST                    T2new_ab[a,i,b,j] 
            Taibj[a,i,b,j]           = T2new_ab[a,i,b,j]
            execute energy_denominator Taibj[a,i,b,j] fock_a fock_b ABAB
            PREPARE T2old_ab[a,i,b,j]    = Taibj[a,i,b,j]
#
      ENDPARDO b, a, j, i
      server_barrier 
#
      ENDPROC UPDATET2 
#     ----------------  
#
      PROC UPDATET1 
#     ------------- 
#
      PARDO a, i 
#
            GET                t1a_new[a,i] 
            GET                t1a_old[a,i] 
            tai[a,i]         = t1a_new[a,i] 
            t1ai[a,i]        = t1a_old[a,i] 
            execute energy_denominator tai[a,i] fock_a fock_a AAAA
            PUT t1a_old[a,i] = tai[a,i] 
            tai[a,i]        -= t1ai[a,i]

            if kiter < diis_order
               PUT eai[a,i,kiter] = Tai[a,i] 
            Endif 

            if kiter >= diis_order
               DO jdiis
                  if jdiis == diis_order
                     PUT eai[a,i,jdiis] = Tai[a,i] 
                     exit 
                   endif
                ENDDO jdiis
            endif
#
      ENDPARDO a, i 
#
      PARDO b, j 
#
            GET                t1b_new[b,j] 
            GET                t1b_old[b,j] 
            tbj[b,j]         = t1b_new[b,j] 
            t1bj[b,j]        = t1b_old[b,j] 
            execute energy_denominator tbj[b,j] fock_b fock_b BBBB
            PUT t1b_old[b,j] = tbj[b,j] 
            tbj[b,j]        -= t1bj[b,j] 
#
            if kiter < diis_order
               PUT ebj[b,j,kiter] = Tbj[b,j] 
            endif 

            if kiter >= diis_order
               DO jdiis
                  if jdiis == diis_order
                     PUT ebj[b,j,jdiis] = Tbj[b,j] 
                     exit 
                   endif
                ENDDO jdiis
            endif
#
      ENDPARDO b, j 
      sip_barrier 
#
      ENDPROC UPDATET1 
#     ----------------  
#
      PROC MOVET2
#     ------------
#
      PARDO a, a1, i, i1
#
            REQUEST            T2old_aa[a,i,a1,i1] 
            taiai[a,i,a1,i1] = T2old_aa[a,i,a1,i1]
#
            if kiter < diis_order
               PREPARE daiai[a,i,a1,i1,kiter] = taiai[a,i,a1,i1]
            endif 

            if kiter >= diis_order
               DO kdiis
                  if kdiis == (diis_order - 1)
                     PREPARE daiai[a,i,a1,i1,kdiis] = taiai[a,i,a1,i1]
                     exit
                  endif 
               ENDDO kdiis
            endif 
#
      ENDPARDO a, a1, i, i1
#
      PARDO b, b1, j, j1
#
            REQUEST            T2old_bb[b,j,b1,j1] 
            Tbjbj[b,j,b1,j1] = T2old_bb[b,j,b1,j1]
#
            if kiter < diis_order
               PREPARE dbjbj[b,j,b1,j1,kiter] = Tbjbj[b,j,b1,j1]
            endif 

            if kiter >= diis_order
               DO kdiis
                  if kdiis == (diis_order - 1)
                     PREPARE dbjbj[b,j,b1,j1,kdiis] = Tbjbj[b,j,b1,j1]
                     exit
                  endif 
               ENDDO kdiis
            endif 
#
      ENDPARDO b, b1, j, j1
#
      PARDO b, a, j, i
#
            REQUEST                    T2old_ab[a,i,b,j] 
            Taibj[a,i,b,j]           = T2old_ab[a,i,b,j]
#
            if kiter < diis_order
               PREPARE daibj[a,i,b,j,kiter] = Taibj[a,i,b,j]
            endif 
            if kiter >= diis_order
               DO kdiis
                  if kdiis == (diis_order - 1)
                     PREPARE daibj[a,i,b,j,kdiis] = Taibj[a,i,b,j]
                  endif 
                ENDDO kdiis
            endif 
#
      ENDPARDO b, a, j, i
#
      ENDPROC MOVET2
#     ----------------
#
      PROC MOVET1
#     ------------
#
      PARDO a, i 
#
            GET        t1a_old[a,i]
            tai[a,i] = t1a_old[a,i]
#
            if kiter < diis_order
               PUT Dai[a,i,kiter] = Tai[a,i]
            endif

            if kiter >= diis_order
               DO kdiis
                  if kdiis == (diis_order - 1)
                     PUT Dai[a,i,kdiis] = Tai[a,i]
                     exit
                  endif
               ENDDO kdiis
            endif

      ENDPARDO a, i
#
      PARDO b, j 
#
            GET        t1b_old[b,j]
            tbj[b,j] = t1b_old[b,j]

            if kiter < diis_order
               PUT dbj[b,j,kiter] = tbj[b,j]
            endif 

	    if kiter >= diis_order
	       DO kdiis
		  if kdiis == (diis_order - 1)
                     PUT dbj[b,j,kdiis] = tbj[b,j]
                  endif 
               ENDDO kdiis 
            endif 
#
      ENDPARDO b, j
#
      ENDPROC MOVET1
#     ----------------
#
# BEGIN MAIN PROGRAM 
# ------------------ 

      ecrit  = cc_conv  
      one    = 1.0
      two    = 2.0
      five   = 5.0
      six    = 6.0
      seven  = 7.0
      zmax   = 0.0
      imax   = 0.0
      AAAA   = 1.0
      BBBB   = 2.0
      ABAB   = 3.0

      execute compute_int_scratchmem oed_ovl zmax imax

#bgn_debug
#      print "reference,diis_start,diis_order,ecrit"
#      print reference
#      print diis_start
#      print diis_order
#      print ecrit  
#      print " "
#end_debug
#
# Read transformed integrals from lists 
# ------------------------------------- 
#
      CALL READ_2EL 
#
# Get initial second-order guess 
# ------------------------------ 
      CALL IGUESS_UHF
      SERVER_BARRIER  
#
# Calculate the second-order energy 
# --------------------------------- 
      CALL ENERGY_NEW 

# Start iterations
# ---------------- 
      DO KITER 
#
#        Form Tau and Taup 
#        ----------------- 
         CALL TAU  
#
#        Zero-out the new two-particle amplitude arrays
#        ---------------------------------------------- 
#
         CALL T2NEW_ZERO
#
# Form one-particle intermediates 
# 
         CALL FAE 
         CALL FMI 
         CALL FME 
         SIP_BARRIER 
#
# Calculate new one-particle amplitudes 
# ------------------------------------- 
#
         CALL T1ANEW 
         CALL T1BNEW 
#
# Calculate new two-particle amplitudes 
# ------------------------------------- 
#
         CALL T2NEWAA  
         CALL T2NEWBB  
         CALL T2NEWAB  
#
         CALL WMINJ 
         CALL AOLADDER 
         CALL WAEBF  
         CALL WMEBJ 

         SERVER_BARRIER   
#
         CALL UPDATET1 
         CALL UPDATET2 
#
         CALL ENERGY_NEW 

         if kiter >= diis_start 
            CALL DO_DIIS
         ENDIF

         CALL MOVET1
         CALL MOVET2
#
# Check on convergence 
# -------------------- 
#
         assert_same ecorrt
         assert_same eold

         etemp = (eold - ecorrt)**(2.0)
         ediff = (etemp)**(0.5)
         assert_same ediff
#bgn_debug
         print kiter 
         print ecorrT
#end_debug

         IF ediff < ecrit
            exit
         ENDIF

#        Reset eold --> enew 
#        ------------------- 
#
         eold = ecorrT 
#
      ENDDO KITER 
#
      server_barrier
      restore_persistent scf_energy "scf_energy"
      server_barrier
      ccsd_correlation = ecorrT
      totenerg  = ecorrT
      totenerg += scf_energy
      ccsd_energy = totenerg
      print " "
      print scf_energy
      print ccsd_correlation
      print ccsd_energy

      CALL WRITE_2EL
#
                    ENDSIAL CCSD_UHF
#                   ----------------
